{
    "openapi": "3.1.0",
    "info":
    {
        "title": "Search API",
        "version": "3.0",
        "description": "With UiTdatabank's Search API you can search events, places and organizers.",
        "contact":
        {
            "name": "publiq helpdesk",
            "email": "technical-support@publiq.be",
            "url": "https://docs.publiq.be"
        }
    },
    "servers":
    [
        {
            "url": "https://search-test.uitdatabank.be",
            "description": "Testing"
        },
        {
            "description": "Production",
            "url": "https://search.uitdatabank.be"
        }
    ],
    "paths":
    {
        "/events":
        {
            "get":
            {
                "summary": "Search events",
                "tags":
                [
                    "Events & places"
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "A single page of search results. If `?embed=true` is used, the search results will contain the complete JSON details. Otherwise only `@id` and `@type` will be returned.",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "type": "object",
                                    "properties":
                                    {
                                        "itemsPerPage":
                                        {
                                            "type": "integer",
                                            "example": 30,
                                            "description": "The amount of results that is being returned per page."
                                        },
                                        "totalItems":
                                        {
                                            "type": "integer",
                                            "example": 2345,
                                            "description": "Total amount of results for the given query parameters."
                                        },
                                        "member":
                                        {
                                            "type": "array",
                                            "description": "Search results (paginated). Note that the complete search results details will only be returned if `?embed=true` is used. Otherwise only the `@id` will be returned.",
                                            "items":
                                            {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "facet":
                                        {
                                            "type": "object",
                                            "description": "Facet counts per possible filter & value.",
                                            "properties":
                                            {
                                                "regions":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "types":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "themes":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "facilities":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "labels":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                }
                                            }
                                        }
                                    },
                                    "required":
                                    [
                                        "itemsPerPage",
                                        "totalItems",
                                        "member"
                                    ]
                                },
                                "examples":
                                {
                                    "Example":
                                    {
                                        "value":
                                        {
                                            "itemsPerPage": 20,
                                            "totalItems": 3,
                                            "member":
                                            [
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/event/7dc08012-488b-4e2b-b318-625d9bce03d7",
                                                    "@type": "Event"
                                                },
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/event/c683ddfe-4ff9-4b4b-a198-b9f553cfc479",
                                                    "@type": "Event"
                                                },
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/event/15d5de07-57e6-4015-84c6-e9c94ccfd9ef",
                                                    "@type": "Event"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "operationId": "get-events",
                "description": "Returns a paginated list of events that match the given filters.\n\n### Repeating query parameters\n\nParameters that have the type `array[string]` and `[]` as a suffix in their name in the list of query parameters below can be repeated to filter on multiple values with an `AND` operator. For example:\n\n*  `?labels[]=uitpas` to only include results that have the label `uitpas`\n*  `?labels[]=uitpas&labels[]=paspartoe` to only include results that have both the labels `uitpas` and `paspartoe`\n\nOther `array[string]` parameters without the `[]` suffix support multiple comma-separated values for `OR` filtering. For example:\n\n*  `?workflowStatus=DRAFT` to return all results with the draft workflow status.\n*  `?workflowStatus=REJECTED,DELETED` to return results with the rejected or deleted workflow status.\n\nAdd `embedCalendarSummaries` to have an extra property `calendarSummary` in the results that contains one or more formatted human-readable summaries of the date/time info of the result. See <a href=\"search-api/calendar-summaries\">the guide about embedding the calendar summaries</a> for more details.",
                "parameters":
                [
                    {
                        "$ref": "#/components/parameters/x-client-id"
                    },
                    {
                        "$ref": "#/components/parameters/x-api-key"
                    },
                    {
                        "$ref": "#/components/parameters/text"
                    },
                    {
                        "$ref": "#/components/parameters/q"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    },
                    {
                        "$ref": "#/components/parameters/addressCountry"
                    },
                    {
                        "$ref": "#/components/parameters/maxAge"
                    },
                    {
                        "$ref": "#/components/parameters/minAge"
                    },
                    {
                        "$ref": "#/components/parameters/allAges"
                    },
                    {
                        "$ref": "#/components/parameters/audienceType"
                    },
                    {
                        "$ref": "#/components/parameters/availableFrom"
                    },
                    {
                        "$ref": "#/components/parameters/availableTo"
                    },
                    {
                        "$ref": "#/components/parameters/attendanceMode"
                    },
                    {
                        "$ref": "#/components/parameters/bookingAvailability"
                    },
                    {
                        "$ref": "#/components/parameters/calendarType"
                    },
                    {
                        "$ref": "#/components/parameters/createdFrom"
                    },
                    {
                        "$ref": "#/components/parameters/createdTo"
                    },
                    {
                        "$ref": "#/components/parameters/modifiedFrom"
                    },
                    {
                        "$ref": "#/components/parameters/modifiedTo"
                    },
                    {
                        "$ref": "#/components/parameters/contributors"
                    },
                    {
                        "$ref": "#/components/parameters/creator"
                    },
                    {
                        "$ref": "#/components/parameters/dateFrom"
                    },
                    {
                        "$ref": "#/components/parameters/dateTo"
                    },
                    {
                        "$ref": "#/components/parameters/localTimeFrom"
                    },
                    {
                        "$ref": "#/components/parameters/localTimeTo"
                    },
                    {
                        "$ref": "#/components/parameters/embed"
                    },
                    {
                        "$ref": "#/components/parameters/embedCalendarSummaries"
                    },
                    {
                        "$ref": "#/components/parameters/embedUitpasPrices"
                    },
                    {
                        "$ref": "#/components/parameters/facets"
                    },
                    {
                        "$ref": "#/components/parameters/groupBy"
                    },
                    {
                        "$ref": "#/components/parameters/regions"
                    },
                    {
                        "$ref": "#/components/parameters/coordinates"
                    },
                    {
                        "$ref": "#/components/parameters/distance"
                    },
                    {
                        "$ref": "#/components/parameters/bounds"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/locationId"
                    },
                    {
                        "$ref": "#/components/parameters/organizerId"
                    },
                    {
                        "$ref": "#/components/parameters/labels"
                    },
                    {
                        "$ref": "#/components/parameters/locationLabels"
                    },
                    {
                        "$ref": "#/components/parameters/organizerLabels"
                    },
                    {
                        "$ref": "#/components/parameters/mainLanguage"
                    },
                    {
                        "$ref": "#/components/parameters/languages"
                    },
                    {
                        "$ref": "#/components/parameters/completedLanguages"
                    },
                    {
                        "$ref": "#/components/parameters/hasMediaObjects"
                    },
                    {
                        "$ref": "#/components/parameters/price"
                    },
                    {
                        "$ref": "#/components/parameters/minPrice"
                    },
                    {
                        "$ref": "#/components/parameters/maxPrice"
                    },
                    {
                        "$ref": "#/components/parameters/sortScore"
                    },
                    {
                        "$ref": "#/components/parameters/sortAvailableTo"
                    },
                    {
                        "$ref": "#/components/parameters/sortCreated"
                    },
                    {
                        "$ref": "#/components/parameters/sortModified"
                    },
                    {
                        "$ref": "#/components/parameters/sortDistance"
                    },
                    {
                        "$ref": "#/components/parameters/status"
                    },
                    {
                        "$ref": "#/components/parameters/termIds"
                    },
                    {
                        "$ref": "#/components/parameters/uitpas"
                    },
                    {
                        "$ref": "#/components/parameters/hasVideos"
                    },
                    {
                        "$ref": "#/components/parameters/workflowStatusOffer"
                    }
                ],
                "security":
                [
                    {
                        "CLIENT_IDENTIFICATION":
                        []
                    },
                    {
                        "CLIENT_ACCESS_TOKEN":
                        []
                    }
                ]
            },
            "parameters":
            []
        },
        "/offers":
        {
            "get":
            {
                "summary": "Search events & places (offers)",
                "tags":
                [
                    "Events & places"
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "A single page of search results. If `?embed=true` is used, the search results will contain the complete JSON details. Otherwise only `@id` and `@type` will be returned.",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "type": "object",
                                    "properties":
                                    {
                                        "itemsPerPage":
                                        {
                                            "type": "integer",
                                            "example": 30,
                                            "description": "The amount of results that is being returned per page."
                                        },
                                        "totalItems":
                                        {
                                            "type": "integer",
                                            "example": 2345,
                                            "description": "Total amount of results for the given query parameters."
                                        },
                                        "member":
                                        {
                                            "type": "array",
                                            "description": "Search results (paginated). Note that the complete search results details will only be returned if `?embed=true` is used. Otherwise only the `@id` and `@type` will be returned.",
                                            "items":
                                            {
                                                "anyOf":
                                                [
                                                    {
                                                        "$ref": "#/components/schemas/Event"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/Place"
                                                    }
                                                ]
                                            }
                                        },
                                        "facet":
                                        {
                                            "type": "object",
                                            "description": "Facet counts per possible filter & value.",
                                            "properties":
                                            {
                                                "regions":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "types":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "themes":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "facilities":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "labels":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                }
                                            }
                                        }
                                    },
                                    "required":
                                    [
                                        "itemsPerPage",
                                        "totalItems",
                                        "member"
                                    ]
                                },
                                "examples":
                                {
                                    "Example":
                                    {
                                        "value":
                                        {
                                            "itemsPerPage": 20,
                                            "totalItems": 3,
                                            "member":
                                            [
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/event/7dc08012-488b-4e2b-b318-625d9bce03d7",
                                                    "@type": "Event"
                                                },
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/place/c683ddfe-4ff9-4b4b-a198-b9f553cfc479",
                                                    "@type": "Place"
                                                },
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/event/15d5de07-57e6-4015-84c6-e9c94ccfd9ef",
                                                    "@type": "Event"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "operationId": "get-offers",
                "description": "Returns a paginated list of both events and places that match the given filters.\n\n### Repeating query parameters\n\nParameters that have the type `array[string]` and `[]` as a suffix in their name in the list of query parameters below can be repeated to filter on multiple values with an `AND` operator. For example:\n\n*  `?labels[]=uitpas` to only include results that have the label `uitpas`\n*  `?labels[]=uitpas&labels[]=paspartoe` to only include results that have both the labels `uitpas` and `paspartoe`\n\nOther `array[string]` parameters without the `[]` suffix support multiple comma-separated values for `OR` filtering. For example:\n\n*  `?workflowStatus=DRAFT` to return all results with the draft workflow status.\n*  `?workflowStatus=REJECTED,DELETED` to return results with the rejected or deleted workflow status.",
                "parameters":
                [
                    {
                        "$ref": "#/components/parameters/x-client-id"
                    },
                    {
                        "$ref": "#/components/parameters/x-api-key"
                    },
                    {
                        "$ref": "#/components/parameters/text"
                    },
                    {
                        "$ref": "#/components/parameters/q"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    },
                    {
                        "$ref": "#/components/parameters/addressCountry"
                    },
                    {
                        "$ref": "#/components/parameters/maxAge"
                    },
                    {
                        "$ref": "#/components/parameters/minAge"
                    },
                    {
                        "$ref": "#/components/parameters/allAges"
                    },
                    {
                        "$ref": "#/components/parameters/audienceType"
                    },
                    {
                        "$ref": "#/components/parameters/availableFrom"
                    },
                    {
                        "$ref": "#/components/parameters/availableTo"
                    },
                    {
                        "$ref": "#/components/parameters/attendanceMode"
                    },
                    {
                        "$ref": "#/components/parameters/bookingAvailability"
                    },
                    {
                        "$ref": "#/components/parameters/calendarType"
                    },
                    {
                        "$ref": "#/components/parameters/createdFrom"
                    },
                    {
                        "$ref": "#/components/parameters/createdTo"
                    },
                    {
                        "$ref": "#/components/parameters/modifiedFrom"
                    },
                    {
                        "$ref": "#/components/parameters/modifiedTo"
                    },
                    {
                        "$ref": "#/components/parameters/contributors"
                    },
                    {
                        "$ref": "#/components/parameters/creator"
                    },
                    {
                        "$ref": "#/components/parameters/dateFrom"
                    },
                    {
                        "$ref": "#/components/parameters/dateTo"
                    },
                    {
                        "$ref": "#/components/parameters/localTimeFrom"
                    },
                    {
                        "$ref": "#/components/parameters/localTimeTo"
                    },
                    {
                        "$ref": "#/components/parameters/embed"
                    },
                    {
                        "$ref": "#/components/parameters/embedCalendarSummaries"
                    },
                    {
                        "$ref": "#/components/parameters/embedUitpasPrices"
                    },
                    {
                        "$ref": "#/components/parameters/facets"
                    },
                    {
                        "$ref": "#/components/parameters/groupBy"
                    },
                    {
                        "$ref": "#/components/parameters/regions"
                    },
                    {
                        "$ref": "#/components/parameters/coordinates"
                    },
                    {
                        "$ref": "#/components/parameters/distance"
                    },
                    {
                        "$ref": "#/components/parameters/bounds"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/isDuplicate"
                    },
                    {
                        "$ref": "#/components/parameters/locationId"
                    },
                    {
                        "$ref": "#/components/parameters/organizerId"
                    },
                    {
                        "$ref": "#/components/parameters/labels"
                    },
                    {
                        "$ref": "#/components/parameters/locationLabels"
                    },
                    {
                        "$ref": "#/components/parameters/organizerLabels"
                    },
                    {
                        "$ref": "#/components/parameters/mainLanguage"
                    },
                    {
                        "$ref": "#/components/parameters/languages"
                    },
                    {
                        "$ref": "#/components/parameters/completedLanguages"
                    },
                    {
                        "$ref": "#/components/parameters/hasMediaObjects"
                    },
                    {
                        "$ref": "#/components/parameters/price"
                    },
                    {
                        "$ref": "#/components/parameters/minPrice"
                    },
                    {
                        "$ref": "#/components/parameters/maxPrice"
                    },
                    {
                        "$ref": "#/components/parameters/sortScore"
                    },
                    {
                        "$ref": "#/components/parameters/sortAvailableTo"
                    },
                    {
                        "$ref": "#/components/parameters/sortCreated"
                    },
                    {
                        "$ref": "#/components/parameters/sortModified"
                    },
                    {
                        "$ref": "#/components/parameters/sortDistance"
                    },
                    {
                        "$ref": "#/components/parameters/status"
                    },
                    {
                        "$ref": "#/components/parameters/termIds"
                    },
                    {
                        "$ref": "#/components/parameters/uitpas"
                    },
                    {
                        "$ref": "#/components/parameters/hasVideos"
                    },
                    {
                        "$ref": "#/components/parameters/workflowStatusOffer"
                    }
                ],
                "security":
                [
                    {
                        "CLIENT_IDENTIFICATION":
                        []
                    },
                    {
                        "CLIENT_ACCESS_TOKEN":
                        []
                    }
                ]
            },
            "parameters":
            []
        },
        "/organizers":
        {
            "get":
            {
                "summary": "Search organizers",
                "tags":
                [
                    "Organizers"
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "A single page of search results. If `?embed=true` is used, the search results will contain the complete JSON details. Otherwise only `@id` and `@type` will be returned.",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "type": "object",
                                    "properties":
                                    {
                                        "itemsPerPage":
                                        {
                                            "type": "integer",
                                            "example": 30,
                                            "description": "The amount of results that is being returned per page."
                                        },
                                        "totalItems":
                                        {
                                            "type": "integer",
                                            "example": 2345,
                                            "description": "Total amount of results for the given query parameters."
                                        },
                                        "member":
                                        {
                                            "type": "array",
                                            "description": "Search results (paginated). Note that the complete search results details will only be returned if `?embed=true` is used. Otherwise only the `@id` will be returned.",
                                            "items":
                                            {
                                                "$ref": "#/components/schemas/Organizer"
                                            }
                                        },
                                        "facet":
                                        {
                                            "type": "object",
                                            "description": "Facet counts per possible filter & value.",
                                            "properties":
                                            {
                                                "regions":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                }
                                            }
                                        }
                                    },
                                    "required":
                                    [
                                        "itemsPerPage",
                                        "totalItems",
                                        "member"
                                    ]
                                },
                                "examples":
                                {
                                    "Example":
                                    {
                                        "value":
                                        {
                                            "itemsPerPage": 20,
                                            "totalItems": 3,
                                            "member":
                                            [
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/organizer/7dc08012-488b-4e2b-b318-625d9bce03d7",
                                                    "@type": "Organizer"
                                                },
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/organizer/c683ddfe-4ff9-4b4b-a198-b9f553cfc479",
                                                    "@type": "Organizer"
                                                },
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/organizer/15d5de07-57e6-4015-84c6-e9c94ccfd9ef",
                                                    "@type": "Organizer"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "operationId": "get-organizers",
                "description": "Returns a paginated list of organizers that match the given filters.\n\n### Repeating query parameters\n\nParameters that have the type `array[string]` and `[]` as a suffix in their name in the list of query parameters below can be repeated to filter on multiple values with an `AND` operator. For example:\n\n*  `?labels[]=uitpas` to only include results that have the label `uitpas`\n*  `?labels[]=uitpas&labels[]=paspartoe` to only include results that have both the labels `uitpas` and `paspartoe`\n",
                "parameters":
                [
                    {
                        "$ref": "#/components/parameters/x-client-id"
                    },
                    {
                        "$ref": "#/components/parameters/x-api-key"
                    },
                    {
                        "$ref": "#/components/parameters/q"
                    },
                    {
                        "$ref": "#/components/parameters/name"
                    },
                    {
                        "$ref": "#/components/parameters/website"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/domain"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    },
                    {
                        "$ref": "#/components/parameters/addressCountry"
                    },
                    {
                        "$ref": "#/components/parameters/creator"
                    },
                    {
                        "$ref": "#/components/parameters/contributors"
                    },
                    {
                        "$ref": "#/components/parameters/facets"
                    },
                    {
                        "$ref": "#/components/parameters/regions"
                    },
                    {
                        "$ref": "#/components/parameters/coordinates"
                    },
                    {
                        "$ref": "#/components/parameters/embed"
                    },
                    {
                        "$ref": "#/components/parameters/distance"
                    },
                    {
                        "$ref": "#/components/parameters/bounds"
                    },
                    {
                        "$ref": "#/components/parameters/labels"
                    },
                    {
                        "$ref": "#/components/parameters/hasImages"
                    },
                    {
                        "$ref": "#/components/parameters/workflowStatusOrganizer"
                    },
                    {
                        "$ref": "#/components/parameters/sortScore"
                    },
                    {
                        "$ref": "#/components/parameters/sortCreated"
                    },
                    {
                        "$ref": "#/components/parameters/sortModified"
                    }
                ],
                "security":
                [
                    {
                        "CLIENT_IDENTIFICATION":
                        []
                    },
                    {
                        "CLIENT_ACCESS_TOKEN":
                        []
                    }
                ]
            },
            "parameters":
            []
        },
        "/places":
        {
            "get":
            {
                "summary": "Search places",
                "tags":
                [
                    "Events & places"
                ],
                "responses":
                {
                    "200":
                    {
                        "description": "A single page of search results. If `?embed=true` is used, the search results will contain the complete JSON details. Otherwise only `@id` and `@type` will be returned.",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "type": "object",
                                    "properties":
                                    {
                                        "itemsPerPage":
                                        {
                                            "type": "integer",
                                            "example": 30,
                                            "description": "The amount of results that is being returned per page."
                                        },
                                        "totalItems":
                                        {
                                            "type": "integer",
                                            "example": 2345,
                                            "description": "Total amount of results for the given query parameters."
                                        },
                                        "member":
                                        {
                                            "type": "array",
                                            "description": "Search results (paginated). Note that the complete search results details will only be returned if `?embed=true` is used. Otherwise only the `@id` will be returned.",
                                            "items":
                                            {
                                                "$ref": "#/components/schemas/Place"
                                            }
                                        },
                                        "facet":
                                        {
                                            "type": "object",
                                            "description": "Facet counts per possible filter & value.",
                                            "properties":
                                            {
                                                "regions":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "types":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "themes":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "facilities":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                },
                                                "labels":
                                                {
                                                    "$ref": "#/components/schemas/Common-facets"
                                                }
                                            }
                                        }
                                    },
                                    "required":
                                    [
                                        "itemsPerPage",
                                        "totalItems",
                                        "member"
                                    ]
                                },
                                "examples":
                                {
                                    "Example":
                                    {
                                        "value":
                                        {
                                            "itemsPerPage": 20,
                                            "totalItems": 3,
                                            "member":
                                            [
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/place/7dc08012-488b-4e2b-b318-625d9bce03d7",
                                                    "@type": "Place"
                                                },
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/place/c683ddfe-4ff9-4b4b-a198-b9f553cfc479",
                                                    "@type": "Place"
                                                },
                                                {
                                                    "@id": "https://io-test.uitdatabank.be/place/15d5de07-57e6-4015-84c6-e9c94ccfd9ef",
                                                    "@type": "Place"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "operationId": "get-places",
                "description": "Returns a paginated list of places that match the given filters.\n\n### Repeating query parameters\n\nParameters that have the type `array[string]` and `[]` as a suffix in their name in the list of query parameters below can be repeated to filter on multiple values with an `AND` operator. For example:\n\n*  `?labels[]=uitpas` to only include results that have the label `uitpas`\n*  `?labels[]=uitpas&labels[]=paspartoe` to only include results that have both the labels `uitpas` and `paspartoe`\n\nOther `array[string]` parameters without the `[]` suffix support multiple comma-separated values for `OR` filtering. For example:\n\n*  `?workflowStatus=DRAFT` to return all results with the draft workflow status.\n*  `?workflowStatus=REJECTED,DELETED` to return results with the rejected or deleted workflow status.\n\nAdd `embedCalendarSummaries` to have an extra property `calendarSummary` in the results that contains one or more formatted human-readable summaries of the date/time info of the result. See <a href=\"search-api/calendar-summaries\">the guide about embedding the calendar summaries</a> for more details.\n",
                "parameters":
                [
                    {
                        "$ref": "#/components/parameters/x-client-id"
                    },
                    {
                        "$ref": "#/components/parameters/x-api-key"
                    },
                    {
                        "$ref": "#/components/parameters/text"
                    },
                    {
                        "$ref": "#/components/parameters/q"
                    },
                    {
                        "$ref": "#/components/parameters/postalCode"
                    },
                    {
                        "$ref": "#/components/parameters/addressCountry"
                    },
                    {
                        "$ref": "#/components/parameters/maxAge"
                    },
                    {
                        "$ref": "#/components/parameters/minAge"
                    },
                    {
                        "$ref": "#/components/parameters/allAges"
                    },
                    {
                        "$ref": "#/components/parameters/audienceType"
                    },
                    {
                        "$ref": "#/components/parameters/availableFrom"
                    },
                    {
                        "$ref": "#/components/parameters/availableTo"
                    },
                    {
                        "$ref": "#/components/parameters/attendanceMode"
                    },
                    {
                        "$ref": "#/components/parameters/bookingAvailability"
                    },
                    {
                        "$ref": "#/components/parameters/calendarType"
                    },
                    {
                        "$ref": "#/components/parameters/createdFrom"
                    },
                    {
                        "$ref": "#/components/parameters/createdTo"
                    },
                    {
                        "$ref": "#/components/parameters/embed"
                    },
                    {
                        "$ref": "#/components/parameters/embedCalendarSummaries"
                    },
                    {
                        "$ref": "#/components/parameters/embedUitpasPrices"
                    },
                    {
                        "$ref": "#/components/parameters/modifiedFrom"
                    },
                    {
                        "$ref": "#/components/parameters/modifiedTo"
                    },
                    {
                        "$ref": "#/components/parameters/contributors"
                    },
                    {
                        "$ref": "#/components/parameters/creator"
                    },
                    {
                        "$ref": "#/components/parameters/dateFrom"
                    },
                    {
                        "$ref": "#/components/parameters/dateTo"
                    },
                    {
                        "$ref": "#/components/parameters/localTimeFrom"
                    },
                    {
                        "$ref": "#/components/parameters/localTimeTo"
                    },
                    {
                        "$ref": "#/components/parameters/facets"
                    },
                    {
                        "$ref": "#/components/parameters/groupBy"
                    },
                    {
                        "$ref": "#/components/parameters/regions"
                    },
                    {
                        "$ref": "#/components/parameters/coordinates"
                    },
                    {
                        "$ref": "#/components/parameters/distance"
                    },
                    {
                        "$ref": "#/components/parameters/bounds"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    },
                    {
                        "$ref": "#/components/parameters/isDuplicate"
                    },
                    {
                        "$ref": "#/components/parameters/locationId"
                    },
                    {
                        "$ref": "#/components/parameters/organizerId"
                    },
                    {
                        "$ref": "#/components/parameters/labels"
                    },
                    {
                        "$ref": "#/components/parameters/organizerLabels"
                    },
                    {
                        "$ref": "#/components/parameters/mainLanguage"
                    },
                    {
                        "$ref": "#/components/parameters/languages"
                    },
                    {
                        "$ref": "#/components/parameters/completedLanguages"
                    },
                    {
                        "$ref": "#/components/parameters/hasMediaObjects"
                    },
                    {
                        "$ref": "#/components/parameters/price"
                    },
                    {
                        "$ref": "#/components/parameters/minPrice"
                    },
                    {
                        "$ref": "#/components/parameters/maxPrice"
                    },
                    {
                        "$ref": "#/components/parameters/sortScore"
                    },
                    {
                        "$ref": "#/components/parameters/sortAvailableTo"
                    },
                    {
                        "$ref": "#/components/parameters/sortCreated"
                    },
                    {
                        "$ref": "#/components/parameters/sortModified"
                    },
                    {
                        "$ref": "#/components/parameters/sortDistance"
                    },
                    {
                        "$ref": "#/components/parameters/status"
                    },
                    {
                        "$ref": "#/components/parameters/termIds"
                    },
                    {
                        "$ref": "#/components/parameters/uitpas"
                    },
                    {
                        "$ref": "#/components/parameters/hasVideos"
                    },
                    {
                        "$ref": "#/components/parameters/workflowStatusOffer"
                    }
                ],
                "security":
                [
                    {
                        "CLIENT_IDENTIFICATION":
                        []
                    },
                    {
                        "CLIENT_ACCESS_TOKEN":
                        []
                    }
                ]
            },
            "parameters":
            []
        }
    },
    "tags":
    [
        {
            "name": "Events & places"
        },
        {
            "name": "Organizers"
        }
    ],
    "components":
    {
        "schemas":
        {
            "Common-address-localized":
            {
                "description": "An address in the `nl` (Dutch) language.",
                "type": "object",
                "title": "address.localized",
                "properties":
                {
                    "addressCountry":
                    {
                        "type": "string",
                        "minLength": 1,
                        "description": "Country code in the ISO-3166 format. For example `BE`.",
                        "maxLength": 2,
                        "pattern": "^[A-Z][A-Z]$"
                    },
                    "addressLocality":
                    {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "\\S",
                        "description": "Municipality of the address in the relevant locale, for example `Brussel` for `nl` or `Bruxelles` for `fr`."
                    },
                    "postalCode":
                    {
                        "type": "string",
                        "description": "Postal code of the municipality, for example `1000`. Formatted as a string because some international postal codes use letters.",
                        "minLength": 1,
                        "pattern": "\\S"
                    },
                    "streetAddress":
                    {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "\\S",
                        "description": "Street address in the relevant locale, for example `Wetstraat 1` for `nl` or `Rue de la Loi 1` for `fr`."
                    }
                },
                "required":
                [
                    "addressCountry",
                    "addressLocality",
                    "postalCode",
                    "streetAddress"
                ],
                "examples":
                [
                    {
                        "addressCountry": "BE",
                        "addressLocality": "Brussel",
                        "postalCode": "1000",
                        "streetAddress": "Wetstraat 1"
                    }
                ]
            },
            "Common-completeness":
            {
                "title": "Completeness",
                "description": "The completeness score is a number between 0 and 100 that indicates how complete the information of an event, place or organizer is.",
                "type": "integer",
                "examples":
                [],
                "maximum": 100,
                "default": 0,
                "example": 56,
                "minimum": 0,
                "readOnly": true
            },
            "Common-copyrightHolder":
            {
                "description": "The copyright holder of the video source.",
                "title": "copyrightHolder",
                "type": "string",
                "example": "publiq",
                "minLength": 2,
                "maxLength": 250,
                "pattern": "\\S"
            },
            "Common-description-localized":
            {
                "description": "A human-readable description in the `nl` (Dutch) language.",
                "type": "string",
                "title": "description.localized",
                "minLength": 1,
                "pattern": "\\S",
                "examples":
                [
                    "Example description. Lorem ipsum dolor sit amet."
                ]
            },
            "Common-facet":
            {
                "title": "facet",
                "description": "A single facet for a specific filter. Every facet has a human-readable name and total count to show to end-users to drill down search results.",
                "type": "object",
                "properties":
                {
                    "name":
                    {
                        "$ref": "#/components/schemas/Common-name"
                    },
                    "count":
                    {
                        "type": "integer",
                        "description": "Total results if the filter is applied with this value (= the key referencing this object)."
                    },
                    "children":
                    {
                        "type": "object",
                        "description": "Children facets, in the case of filters with a hierarchy.",
                        "additionalProperties":
                        {
                            "$ref": "#/components/schemas/Common-facet"
                        }
                    }
                },
                "required":
                [
                    "name",
                    "count"
                ],
                "examples":
                [
                    {
                        "name":
                        {
                            "nl": "Vlaams-Brabant",
                            "fr": "Brabant Flamand",
                            "en": "Flemish Brabant"
                        },
                        "count": 22,
                        "children":
                        {
                            "gem-leuven":
                            {
                                "name":
                                {
                                    "nl": "Leuven",
                                    "fr": "Louvain"
                                },
                                "count": 17
                            },
                            "gem-diest":
                            {
                                "name":
                                {
                                    "nl": "Diest",
                                    "fr": "Diest"
                                },
                                "count": 5
                            }
                        }
                    }
                ]
            },
            "Common-facets":
            {
                "title": "facets",
                "description": "Possible values for a filter, with an estimated total count if the filter is applied with one of the given values.\n\nFor example a list of facets for the `regions` filter can be:\n\n```json\n{\n  \"regions\": {\n    \"prv-vlaams-brabant\": {\n      \"name\": {\n        \"nl\": \"Vlaams-Brabant\",\n        \"fr\": \"Brabant Flamand\",\n        \"en\": \"Flemish Brabant\"\n      },\n      \"count\": 22,\n      \"children\": {\n        ... // a nested list of facets\n      }\n    },\n    \"prv-antwerpen\": {\n      \"name\": {\n        \"nl\": \"Antwerpen\",\n        \"fr\": \"Anvers\",\n        \"en\": \"Antwerp\"\n      },\n      \"count\": 18,\n      \"children\": {\n        ... // a nested list of facets\n      }\n    },\n    \"prv-limburg\": {\n      \"name\": {\n        \"nl\": \"Limburg\",\n        \"fr\": \"Limbourg\",\n        \"en\": \"Limburg\"\n      },\n      \"count\": 11,\n      \"children\": {\n        ... // a nested list of facets\n      }\n    }\n  }\n}\n```\n\nIf the user then selects \"Vlaams-Brabant (22)\" to see the 22 results in Vlaams-Brabant, the `regions` filter should be applied with the value `prv-vlaams-brabant`.",
                "type": "object",
                "additionalProperties":
                {
                    "$ref": "#/components/schemas/Common-facet"
                },
                "examples":
                [
                    {
                        "prv-vlaams-brabant":
                        {
                            "name":
                            {
                                "nl": "Vlaams-Brabant",
                                "fr": "Brabant Flamand",
                                "en": "Flemish Brabant"
                            },
                            "count": 22
                        },
                        "prv-antwerpen":
                        {
                            "name":
                            {
                                "nl": "Antwerpen",
                                "fr": "Anvers",
                                "en": "Antwerp"
                            },
                            "count": 18
                        },
                        "prv-limburg":
                        {
                            "name":
                            {
                                "nl": "Limburg",
                                "fr": "Limbourg",
                                "en": "Limburg"
                            },
                            "count": 18
                        }
                    }
                ]
            },
            "Common-label":
            {
                "title": "label",
                "description": "String of 2-255 characters. Can contain any characters except for semicolons (`;`).",
                "type": "string",
                "minLength": 2,
                "maxLength": 255,
                "pattern": "^(?=.{2,255}$)(?=.*\\S.*\\S.*)[^;]*$",
                "examples":
                [
                    "example label 12345!"
                ]
            },
            "Common-language":
            {
                "description": "The language of the video.\nCan be one of `nl`, `fr`, `de`, or `en`.",
                "title": "language",
                "type": "string",
                "example": "nl",
                "enum":
                [
                    "nl",
                    "fr",
                    "de",
                    "en"
                ]
            },
            "Common-name-localized":
            {
                "description": "A human-readable name in the `nl` (Dutch) language.",
                "type": "string",
                "title": "name.localized",
                "minLength": 1,
                "maxLength": 90,
                "pattern": "\\S",
                "examples":
                [
                    "Example name"
                ]
            },
            "Common-name":
            {
                "type": "object",
                "title": "name",
                "description": "An internationalized name with one or more localized names.",
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `nl` (Dutch) language."
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `fr` (French) language."
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `de` (German) language."
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `en` (English) language."
                    }
                },
                "examples":
                [
                    {
                        "nl": "Voorbeeld van een naam",
                        "fr": "Exemple d'un nom",
                        "de": "Beispiel eines Namens",
                        "en": "Example of a name"
                    }
                ]
            },
            "Common-string-uri-readOnly":
            {
                "description": "The url that can be used to embed the video inside an iFrame.",
                "title": "uri.readOnly",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]?:\\/\\/",
                "readOnly": true,
                "examples":
                [
                    "https://www.example.com"
                ]
            },
            "Common-string-uri-video":
            {
                "title": "uri.video",
                "type": "string",
                "format": "uri",
                "description": "The unique url of the video. Currently only Youtube and Vimeo sources are allowed.",
                "pattern": "^http(s?):\\/\\/(www\\.)?((youtube\\.com\\/watch\\?v=([^\\/#&?]*))|(vimeo\\.com\\/([^\\/#&?]*))|(youtu\\.be\\/([^\\/#&?]*))|(youtube.com/embed/([^\\/#&?]*))|(youtube.com/shorts/([^\\/#&?]*)))",
                "examples":
                [
                    "https://www.youtube.com/watch?v=cEItmb_a20D",
                    "https://www.vimeo.com/54fdrg",
                    "https://www.youtube.com/shorts/ViOS7SeT0HE"
                ]
            },
            "Common-string-uri":
            {
                "title": "uri",
                "description": "A URI with the HTTP or HTTPS protocol.",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]?:\\/\\/\\w",
                "examples":
                [
                    "https://www.example.com"
                ]
            },
            "Common-string-uuid-readOnly":
            {
                "description": "The unique id of the video, generated by UiTdatabank.",
                "title": "uuid",
                "type": "string",
                "format": "uuid",
                "examples":
                [
                    "46e9ea9f-fc42-4759-a81b-4308467b7c35"
                ],
                "readOnly": true
            },
            "Common-string-uuid":
            {
                "description": "The unique id of the production, formatted as UUID. For example `10ce7cb1-7bc9-4ce4-a256-460f56c49965`.",
                "title": "uuid",
                "type": "string",
                "format": "uuid",
                "examples":
                [
                    "46e9ea9f-fc42-4759-a81b-4308467b7c35"
                ]
            },
            "Event-@id":
            {
                "title": "event.@id",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]?:\\/\\/.+?\\/event[s]?\\/([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-?[0-9A-Fa-f]{12})[\\/]?",
                "description": "A unique URI that acts as globally unique ID for the [event](./models/event.json). Based on [JSON-LD node identifiers](https://www.w3.org/TR/json-ld/#node-identifiers).",
                "examples":
                [
                    "https://io-test.uitdatabank.be/event/85b04295-479c-40f5-b3dd-469dfb4387b3"
                ]
            },
            "Event-attendanceMode":
            {
                "title": "event.attendanceMode",
                "type": "string",
                "description": "Indicates if the [event](./models/event.json) is happening online, offline, or both (mixed).",
                "enum":
                [
                    "online",
                    "offline",
                    "mixed"
                ]
            },
            "Event-audience":
            {
                "title": "event.audience",
                "type": "object",
                "description": "Indicates the intended audience of the [event](./models/event.json).",
                "properties":
                {
                    "audienceType":
                    {
                        "type": "string",
                        "enum":
                        [
                            "everyone",
                            "members",
                            "education"
                        ],
                        "description": "Indicates whether the event or place is accessible to `everyone`, `members` only, or `education` only."
                    }
                },
                "required":
                [
                    "audienceType"
                ],
                "examples":
                [
                    {
                        "audienceType": "everyone"
                    },
                    {
                        "audienceType": "members"
                    },
                    {
                        "audienceType": "education"
                    }
                ]
            },
            "Event-availableFrom":
            {
                "title": "event.availableFrom",
                "description": "The first date & time that the [event](./models/event.json) is allowed to be visible on publication channels.\n\nFormatted as an ISO-8601 datetime. For example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Event-availableTo":
            {
                "title": "event.availableTo",
                "description": "The last date & time that the [event](./models/event.json) is allowed to be visible on publication channels.\n\nAdded automatically by UiTdatabank based on either the [startDate](./models/event-startDate.json) or [endDate](./models/event-endDate.json) depending on the [event type](./models/event-terms.json).\n\nFormatted as an ISO-8601 datetime. For example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Event-bookingAvailability":
            {
                "title": "event.bookingAvailability",
                "description": "Indicates whether the event still has tickets or reservations available. Currently only contains a `type` that can be `Available` or `Unavailable`, but can later be expanded with more detailed info.",
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "type": "string",
                        "enum":
                        [
                            "Available",
                            "Unavailable"
                        ],
                        "description": "One of two possible types.\n\n- `Available`:Tickets or reservations available\n- `Unavailable`: No more tickets or reservations available."
                    }
                },
                "required":
                [
                    "type"
                ]
            },
            "Event-bookingInfo":
            {
                "title": "event.bookingInfo",
                "description": "Booking info of the [event](./models/event.json). Can contain a phone number, and/or an email address, and/or a website URL. [Here is a detailed guide](./entry-api/shared/booking-and-contact-info#contactpoint) with more information.",
                "type": "object",
                "dependentRequired":
                {
                    "url":
                    [
                        "urlLabel"
                    ]
                },
                "examples":
                [
                    {
                        "phone": "+32/01234567890",
                        "email": "info@example.com",
                        "url": "https://www.example.com",
                        "urlLabel":
                        {
                            "nl": "Nederlandse tekst",
                            "fr": "Texte français",
                            "de": "Deutscher Text",
                            "en": "English text"
                        },
                        "availabilityStarts": "2021-05-17T22:00:00+00:00",
                        "availabilityEnds": "2021-05-17T22:00:00+00:00"
                    }
                ],
                "properties":
                {
                    "phone":
                    {
                        "type": "string",
                        "description": "Phone number for booking purposes.",
                        "minLength": 1,
                        "pattern": "\\S"
                    },
                    "email":
                    {
                        "type": "string",
                        "description": "Email address for booking purposes.",
                        "format": "email",
                        "example": "info@example.com"
                    },
                    "url":
                    {
                        "$ref": "#/components/schemas/Common-string-uri",
                        "description": "URL to a website for booking purposes."
                    },
                    "urlLabel":
                    {
                        "type": "object",
                        "description": "Call-to-action text to show for the link to the booking url. See [our suggested values](./entry-api/shared/booking-and-contact-info#urllabel).",
                        "minProperties": 1,
                        "examples":
                        [
                            {
                                "nl": "Nederlandse tekst",
                                "fr": "Texte français",
                                "de": "Deutscher Text",
                                "en": "English text"
                            }
                        ],
                        "properties":
                        {
                            "nl":
                            {
                                "type": "string",
                                "description": "Dutch description",
                                "example": "Nederlandse beschrijving",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "fr":
                            {
                                "type": "string",
                                "description": "French description",
                                "example": "Description français",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "de":
                            {
                                "type": "string",
                                "description": "German description",
                                "example": "Deutscher Beschreibung",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "en":
                            {
                                "type": "string",
                                "description": "English description",
                                "example": "English description",
                                "pattern": "\\S",
                                "minLength": 1
                            }
                        }
                    },
                    "availabilityStarts":
                    {
                        "description": "The date & time when the booking period starts",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-17T22:00:00+00:00",
                        "examples":
                        [
                            "2021-05-17T22:00:00+00:00"
                        ]
                    },
                    "availabilityEnds":
                    {
                        "description": "The date & time when the booking period ends",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-17T22:00:00+00:00",
                        "examples":
                        [
                            "2021-05-17T22:00:00+00:00"
                        ]
                    }
                }
            },
            "Event-calendarSummary":
            {
                "title": "event.calendarSummary",
                "type": "object",
                "description": "Only visible when adding the extra `embedCalendarSummaries` property to the search query. This contains one or more formatted human-readable summaries of the date/time info of the result.",
                "examples":
                [
                    {
                        "nl":
                        {
                            "text":
                            {
                                "xs": "28 nov"
                            }
                        },
                        "fr":
                        {
                            "text":
                            {
                                "xs": "28 nov"
                            }
                        },
                        "de":
                        {
                            "text":
                            {
                                "xs": "28 Nov"
                            }
                        },
                        "en":
                        {
                            "text":
                            {
                                "xs": "28 Nov"
                            }
                        }
                    },
                    {
                        "nl":
                        {
                            "text":
                            {
                                "xs": "28 nov"
                            }
                        },
                        "fr":
                        {
                            "text":
                            {
                                "xs": "28 nov"
                            }
                        },
                        "de":
                        {
                            "text":
                            {
                                "xs": "28 Nov"
                            }
                        },
                        "en":
                        {
                            "text":
                            {
                                "xs": "28 Nov"
                            }
                        }
                    }
                ],
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Offer-calendarSummary_Detail",
                        "description": "Contains all Dutch calendar summaries"
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Offer-calendarSummary_Detail",
                        "description": "Contains all French calendar summaries"
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Offer-calendarSummary_Detail",
                        "description": "Contains all German calendar summaries"
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Offer-calendarSummary_Detail",
                        "description": "Contains all English calendar summaries"
                    }
                },
                "readOnly": true
            },
            "Event-calendarType":
            {
                "type": "string",
                "title": "event.calendarType",
                "description": "Determines how often the [event](./models/event.json) occurs.\n\nPossible values: `single`, `multiple`, `periodic`, `permanent`.\n\n- **single**: For events that take place at one single day (e.g. a concert of Radiohead) and events with only one start and end date (e.g. camping from monday until sunday). **Must** have 1 [subEvent](./models/event-subEvent.json). Will automatically get a [startDate](./models/event-startDate.json) and [endDate](./models/event-endDate.json) based on the `subEvent`.\n\n- **multiple**: For events that take place on several occasions, whether or not contiguous (e.g. a festival). **Must** have 2+ [subEvents](./models/event-subEvent.json). Will automatically get a [startDate](./models/event-startDate.json) and [endDate](./models/event-endDate.json) based on the `subEvents`.\n\n- **periodic**: For events that take places on recurring moments (e.g. a course watercolor painting, each wednesday evening). **Must** have a [startDate](./models/event-startDate.json) and [endDate](./models/event-endDate.json). Can optionally have [openingHours](./models/event-openingHours.json).\n\n- **permanent**: Not recommended for events, consider creating a [place](./models/place.json) instead. Can optionally have [openingHours](./models/event-openingHours.json). [Here is a detailed guide](./entry-api/shared/calendar-info#calendartype) with more information.",
                "enum":
                [
                    "single",
                    "multiple",
                    "periodic",
                    "permanent"
                ],
                "examples":
                [
                    "single"
                ]
            },
            "Event-completedLanguages":
            {
                "title": "event.completedLanguages",
                "description": "List of languages that _every_ localizable property on the [event](./models/event.json) is available in.\n\nAdded automatically by UiTdatabank based on the languages present in localized properties.\n\nSee also [languages](./models/event-languages.json).",
                "type": "array",
                "readOnly": true,
                "minItems": 1,
                "items":
                {
                    "type": "string",
                    "enum":
                    [
                        "nl",
                        "fr",
                        "de",
                        "en"
                    ],
                    "example": "nl"
                },
                "examples":
                [
                    [
                        "nl",
                        "fr"
                    ]
                ]
            },
            "Event-contactPoint":
            {
                "title": "event.contactPoint",
                "description": "Contact info of the [event](./models/event.json), containing one or more phone numbers, email addresses, and/or website URLs. [Here is a detailed guide](./entry-api/shared/booking-and-contact-info#contactpoint) with more information.",
                "type": "object",
                "properties":
                {
                    "phone":
                    {
                        "type": "array",
                        "description": "List of phone numbers for contact purposes (can be empty)",
                        "minItems": 0,
                        "items":
                        {
                            "type": "string",
                            "description": "Phone number for contact purposes.",
                            "minLength": 1,
                            "pattern": "\\S"
                        }
                    },
                    "email":
                    {
                        "type": "array",
                        "description": "List of email addresses for contact purposes (can be empty)",
                        "minItems": 0,
                        "items":
                        {
                            "type": "string",
                            "description": "Email address for contact purposes.",
                            "format": "email",
                            "example": "info@example.com"
                        }
                    },
                    "url":
                    {
                        "type": "array",
                        "description": "List of URLs for contact purposes (can be empty)",
                        "minItems": 0,
                        "items":
                        {
                            "$ref": "#/components/schemas/Common-string-uri",
                            "description": "URL to a website for contact purposes."
                        }
                    }
                },
                "examples":
                [
                    {
                        "phone":
                        [
                            "+32/1234567890"
                        ],
                        "email":
                        [
                            "info@example.com"
                        ],
                        "url":
                        [
                            "https://www.example.com"
                        ]
                    }
                ]
            },
            "Event-contributors":
            {
                "title": "event.contributors",
                "readOnly": true,
                "description": "List of contributors on an [event](./models/event.json). Only included if you request the event with an authenticated user who has the \"Aanbod bewerken\" permission on the event. [Here is a detailed guide](./entry-api/shared/contributors) with more information.",
                "type": "array",
                "minItems": 0,
                "uniqueItems": true,
                "examples":
                [
                    [
                        "info@publiq.be",
                        "vragen@uitdatabank.be"
                    ]
                ],
                "items":
                {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                }
            },
            "Event-created":
            {
                "title": "event.created",
                "description": "Date formatted as an ISO-8601 datetime, added automatically by UiTdatabank based on the date & time the [event](./models/event.json) was created at.\n\nFor example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Event-creator":
            {
                "title": "event.creator",
                "description": "The unique identifier of the creator of the [event](./models/event.json). Usually a UUID, but can historally be an e-mail address.\n\nAdded automatically by UiTdatabank based on the authentication credentials used to create the event.",
                "type": "string",
                "examples":
                [
                    "auth0|45c0d021-c78f-445f-adef-be3355b23e4f",
                    "rLlc90TSFBDRQbZwzP5vm2niDXI1CZef@clients",
                    "a9363e98-8a24-46a9-ad29-f175d7181138",
                    "google-oauth2|108326107941662286958",
                    "example@emails-are-legacy-but-may-occur.com"
                ],
                "minLength": 1,
                "pattern": "\\S",
                "readOnly": true
            },
            "Event-description":
            {
                "title": "event.description",
                "description": "A human-readable, internationalized description of the [event](./models/event.json). \n\nRequires at least one value, for the language specified in the [mainLanguage](./models/event-mainLanguage.json) property.",
                "type": "object",
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `nl` (Dutch) language."
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `fr` (French) language."
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `de` (German) language."
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `en` (English) language."
                    }
                },
                "examples":
                [
                    {
                        "nl": "Voorbeeld beschrijving. Lorem ipsum dolor sit amet.",
                        "fr": "Description d'exemple. Lorem ipsum dolor sit amet.",
                        "de": "Beispiel Beschreibung. Lorem ipsum dolor sit amet.",
                        "en": "Example description. Lorem ipsum dolor sit amet."
                    }
                ]
            },
            "Event-endDate":
            {
                "title": "event.endDate",
                "description": "The date & time that the [event](./models/event.json) or [subEvent](./models/event-subEvent.json) ends, as an ISO-8601 date. For example `2021-05-17T22:00:00+00:00`.\n\nRequired on events when using one of the following calendarTypes:\n\n- `single`\n- `multiple`\n- `periodic`\n\nAlways required on subEvents.",
                "type": "string",
                "format": "date-time",
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Event-hiddenLabels":
            {
                "title": "event.hiddenLabels",
                "description": "Same as [labels](./models/event-labels.json), but for labels that should not be visible for end users on publication channels and should instead only be used for filtering or other processing.",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/Common-label"
                },
                "uniqueItems": true,
                "minItems": 1,
                "examples":
                [
                    [
                        "example label with spaces",
                        "underscores_are_valid",
                        "dashes-are-valid"
                    ]
                ]
            },
            "Event-image":
            {
                "title": "event.image",
                "description": "URL to the main image of the [event](./models/event.json). Will be automatically be set by UiTdatabank to the URL of the first image in `mediaObject`.",
                "examples":
                [
                    "https://io-test.uitdatabank.be/images/example.png"
                ],
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]?:\\/\\/",
                "readOnly": true
            },
            "Event-labels":
            {
                "title": "event.labels",
                "description": "One or more labels that categorize the [event](./models/event.json). Compared to [terms](./models/event-terms.json), labels do not have a defined set of possible values or a hierarchy.\n\nLabels are allowed to be visible for end users on publication channels.\n\nSee [hiddenLabels](./models/event-hiddenLabels.json) for labels that should not be visible on publication channels.",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/Common-label"
                },
                "uniqueItems": true,
                "minItems": 1,
                "examples":
                [
                    [
                        "example label with spaces",
                        "underscores_are_valid",
                        "dashes-are-valid"
                    ]
                ]
            },
            "Event-languages":
            {
                "title": "event.languages",
                "description": "List of languages that the [event](./models/event.json) is available in. (Not all localizable properties may contain every language though)\n\nAdded automatically by UiTdatabank based on the languages present in localized properties.\n\nSee also [completedLanguages](./models/event-completedLanguages.json).",
                "type": "array",
                "readOnly": true,
                "minItems": 1,
                "items":
                {
                    "type": "string",
                    "enum":
                    [
                        "nl",
                        "fr",
                        "de",
                        "en"
                    ],
                    "example": "nl"
                },
                "examples":
                [
                    [
                        "nl",
                        "fr"
                    ]
                ]
            },
            "Event-location":
            {
                "title": "event.location",
                "description": "A reference to a [place](./models/place.json) linked to the event. When writing an event it should only contain an `@id` property. When reading an event it will contain all the properties from the [place](./models/place.json). Always required when creating/updating an event, except when using [attendanceMode](./models/event-attendanceMode.json) `online`.",
                "type": "object",
                "examples":
                [
                    {
                        "@id": "https://io-test.uitdatabank.be/places/5cf42d51-3a4f-46f0-a8af-1cf672be8c84"
                    }
                ],
                "properties":
                {
                    "@id":
                    {
                        "$ref": "#/components/schemas/Place-@id"
                    }
                },
                "required":
                [
                    "@id"
                ]
            },
            "Event-mainLanguage":
            {
                "title": "event.mainLanguage",
                "description": "The main language that the [event](./models/event.json) is described in. All localized properties like [name](./models/event-name.json) and [description](./models/event-description.json) will be required to have at least a value for this language.\n\nCan be one of `nl`, `fr`, `de`, or `en`.",
                "type": "string",
                "enum":
                [
                    "nl",
                    "fr",
                    "de",
                    "en"
                ]
            },
            "Event-mediaObject":
            {
                "title": "event.mediaObject",
                "description": "A list of media objects related to the [event](./models/event.json), in reality always images but called mediaObject for backward compatibility. The main image of the event will always be set to the first image in this list when creating/updating an event with multiple images.",
                "type": "array",
                "minItems": 1,
                "items":
                {
                    "$ref": "#/components/schemas/Image"
                },
                "examples":
                [
                    [
                        {
                            "@id": "https://io-test.uitdatabank.be/images/546a90cd-a238-417b-aa98-1b6c50c1345c",
                            "id": "546a90cd-a238-417b-aa98-1b6c50c1345c",
                            "contentUrl": "https://images-test.uitdatabank.be/546a90cd-a238-417b-aa98-1b6c50c1345c.jpeg",
                            "thumbnailUrl": "https://images-test.uitdatabank.be/546a90cd-a238-417b-aa98-1b6c50c1345c.jpeg",
                            "description": "Een voorbeeld beschrijving",
                            "copyrightHolder": "Jan",
                            "inLanguage": "nl"
                        }
                    ]
                ]
            },
            "Event-modified":
            {
                "title": "event.modified",
                "description": "Date formatted as an ISO-8601 datetime, added automatically by UiTdatabank based on the date & time the [event](./models/event.json) was last modified.\n\nFor example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Event-name":
            {
                "title": "event.name",
                "description": "The human-readable, localized name of the [event](./models/event.json).\n\nRequires at least one value, for the language specified in the [mainLanguage](./models/event-mainLanguage.json) property.",
                "minLength": 1,
                "maxLength": 90,
                "type": "object",
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `nl` (Dutch) language."
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `fr` (French) language."
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `de` (German) language."
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `en` (English) language."
                    }
                },
                "examples":
                [
                    {
                        "nl": "Voorbeeld van een naam",
                        "fr": "Exemple d'un nom",
                        "de": "Beispiel eines Namens",
                        "en": "Example of a name"
                    }
                ]
            },
            "Event-onlineUrl":
            {
                "examples":
                [],
                "title": "event.onlineUrl",
                "description": "The url to follow the [event](./models/event.json) online.",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]?:\\/\\/\\w"
            },
            "Event-openingHours":
            {
                "title": "event.openingHours",
                "description": "A list of multiple open/closed times and weekdays indicating when the [event](./models/event.json) is happening when using the `periodic` [calendarType](./models/event-calendarType.json).",
                "type": "array",
                "items":
                {
                    "type": "object",
                    "examples":
                    [
                        {
                            "opens": "09:00",
                            "closes": "17:00",
                            "dayOfWeek":
                            [
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday"
                            ]
                        }
                    ],
                    "properties":
                    {
                        "opens":
                        {
                            "type": "string",
                            "description": "Opening time on the related weekDays.",
                            "examples":
                            [
                                "17:00"
                            ],
                            "pattern": "^\\d?\\d:\\d\\d$"
                        },
                        "closes":
                        {
                            "type": "string",
                            "description": "Closing time on the related weekdays.",
                            "examples":
                            [
                                "17:00"
                            ],
                            "pattern": "^\\d?\\d:\\d\\d$"
                        },
                        "dayOfWeek":
                        {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "description": "One or more weekdays that the open/closing times are applicable for.",
                            "items":
                            {
                                "type": "string",
                                "enum":
                                [
                                    "monday",
                                    "tuesday",
                                    "wednesday",
                                    "thursday",
                                    "friday",
                                    "saturday",
                                    "sunday"
                                ],
                                "description": "A single weekday."
                            }
                        }
                    },
                    "required":
                    [
                        "opens",
                        "closes",
                        "dayOfWeek"
                    ]
                },
                "examples":
                [
                    [
                        {
                            "opens": "13:00",
                            "closes": "17:00",
                            "dayOfWeek":
                            [
                                "monday"
                            ]
                        },
                        {
                            "opens": "09:00",
                            "closes": "17:00",
                            "dayOfWeek":
                            [
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday",
                                "sunday"
                            ]
                        }
                    ]
                ]
            },
            "Event-organizer":
            {
                "title": "event.organizer",
                "description": "A reference to an [organizer](./models/organizer.json) linked to the event. When writing an event it should only contain an `@id` property. When reading an event it will contain all the properties from the [organizer](./models/organizer.json).",
                "type": "object",
                "examples":
                [
                    {
                        "@id": "https://io-test.uitdatabank.be/organizers/5cf42d51-3a4f-46f0-a8af-1cf672be8c84"
                    }
                ],
                "properties":
                {
                    "@id":
                    {
                        "$ref": "#/components/schemas/Organizer-@id"
                    }
                },
                "required":
                [
                    "@id"
                ]
            },
            "Event-priceInfo":
            {
                "title": "event.priceInfo",
                "description": "A list of tariffs available for tickets/reservations to attend the [event](./models/event.json).",
                "type": "array",
                "minItems": 1,
                "contains":
                {
                    "properties":
                    {
                        "category":
                        {
                            "const": "base"
                        }
                    }
                },
                "minContains": 1,
                "maxContains": 1,
                "items":
                {
                    "allOf":
                    [
                        {
                            "type": "object",
                            "properties":
                            {
                                "category":
                                {
                                    "type": "string",
                                    "enum":
                                    [
                                        "base",
                                        "tariff",
                                        "uitpas"
                                    ],
                                    "example": "base",
                                    "description": "Indicates whether this is the base price or a custom tariff.\n`base` for the base price, and `tariff` for custom/extra tariffs.  Tariffs with category `uitpas` are automatically added by UiTdatabank and read-only. They will be updated whenever other tariffs change."
                                },
                                "price":
                                {
                                    "type": "number",
                                    "format": "float",
                                    "minimum": 0,
                                    "example": 10.5,
                                    "description": "The price of a ticket in this category."
                                },
                                "priceCurrency":
                                {
                                    "type": "string",
                                    "enum":
                                    [
                                        "EUR"
                                    ],
                                    "default": "EUR",
                                    "description": "The currency of the price. Currently only `EUR` is supported."
                                },
                                "name":
                                {
                                    "$ref": "#/components/schemas/Common-name",
                                    "description": "Name of a tariff inside priceInfo. Required if category is set to `tariff`. For the `base` category UiTdatabank will set a default. Requires at least one value, for the language specified in the `mainLanguage` property. Names must be unique (per language) when using multiple tarrifs."
                                }
                            },
                            "required":
                            [
                                "category",
                                "price"
                            ]
                        },
                        {
                            "if":
                            {
                                "required":
                                [
                                    "category"
                                ],
                                "properties":
                                {
                                    "category":
                                    {
                                        "const": "tariff"
                                    }
                                }
                            },
                            "then":
                            {
                                "required":
                                [
                                    "name"
                                ]
                            }
                        }
                    ]
                },
                "examples":
                [
                    [
                        {
                            "category": "base",
                            "price": 10.5,
                            "priceCurrency": "EUR",
                            "name":
                            {
                                "nl": "Basistarief",
                                "fr": "Tarif de base",
                                "en": "Base tariff",
                                "de": "Basisrate"
                            }
                        }
                    ],
                    [
                        {
                            "category": "base",
                            "price": 10.5,
                            "priceCurrency": "EUR",
                            "name":
                            {
                                "nl": "Basistarief",
                                "fr": "Tarif de base",
                                "en": "Base tariff",
                                "de": "Basisrate"
                            }
                        },
                        {
                            "category": "tariff",
                            "price": 8,
                            "priceCurrency": "EUR",
                            "name":
                            {
                                "nl": "Jongeren (<18j)",
                                "en": "Youth (<18yo)"
                            }
                        }
                    ]
                ]
            },
            "Event-production":
            {
                "description": "The production that the [event](./models/event.json) belongs to.\n\nA production is a group of events that share the same subject but are taking place in different locations and/or are organized by different organizers.\n\nFor example a theatre show that is scheduled to be performed at different locations, or a movie that will be screened at different cinema's.",
                "type": "object",
                "examples":
                [
                    {
                        "id": "10ce7cb1-7bc9-4ce4-a256-460f56c49965",
                        "title": "Kommil Foo - OOGST",
                        "otherEvents":
                        [
                            "https://io-test.uitdatabank.be/events/b815e4e6-d79f-40f2-b329-50e566e23367",
                            "https://io-test.uitdatabank.be/events/eb155497-46b9-4fb2-9457-d073fe02322e"
                        ]
                    }
                ],
                "title": "event.production",
                "properties":
                {
                    "id":
                    {
                        "$ref": "#/components/schemas/Common-string-uuid",
                        "description": "The unique id of the production, formatted as UUID. For example `10ce7cb1-7bc9-4ce4-a256-460f56c49965`."
                    },
                    "title":
                    {
                        "type": "string",
                        "minLength": 1,
                        "description": "The human-readable name of the production. Not localized but in the original language of the events. Automatically added by UiTdatabank.",
                        "example": "Kommil Foo - OOGST"
                    },
                    "otherEvents":
                    {
                        "type": "array",
                        "description": "A list of globally unique URIs of other events that are part of this production. See also [@id](./event-@id.json). Automatically added by UiTdatabank.",
                        "uniqueItems": true,
                        "items":
                        {
                            "$ref": "#/components/schemas/Event-@id"
                        }
                    }
                },
                "required":
                [
                    "id",
                    "title",
                    "otherEvents"
                ],
                "readOnly": true
            },
            "Event-sameAs":
            {
                "title": "event.sameAs",
                "description": "One or more URIs that represent the same [event](./models/event.json) on another API or website, not necessarily in JSON-LD format.\n\nAdded automatically by UiTdatabank based on info from other systems.\n\nFor example `http://www.uitinvlaanderen.be/agenda/e/test-event/85b04295-479c-40f5-b3dd-469dfb4387b3`.",
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "examples":
                [
                    [
                        "http://www.uitinvlaanderen.be/agenda/e/example/85b04295-479c-40f5-b3dd-469dfb4387b3"
                    ]
                ],
                "items":
                {
                    "$ref": "#/components/schemas/Common-string-uri"
                },
                "readOnly": true
            },
            "Event-startDate":
            {
                "title": "event.startDate",
                "description": "The date & time that the [event](./models/event.json) or [subEvent](./models/event-subEvent.json) starts, as an ISO-8601 date. For example `2021-05-17T22:00:00+00:00`.\n\nRequired on events when using one of the following calendarTypes:\n\n- `single`\n- `multiple`\n- `periodic`\n\nAlways required on subEvents.",
                "type": "string",
                "format": "date-time",
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Event-status":
            {
                "title": "event.status",
                "description": "Indicates if the [event](./models/event.json) is still happening as scheduled or not.",
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "enum":
                        [
                            "Available",
                            "TemporarilyUnavailable",
                            "Unavailable"
                        ],
                        "example": "Available",
                        "description": "One of three possible status types.\n\n- `Available`: Happening or open as scheduled\n- `TemporarilyUnavailable`: Postponed or temporarily closed\n- `Unavailable`: Cancelled or permanently closed",
                        "type": "string"
                    },
                    "reason":
                    {
                        "description": "The reason of the status, as a localized human-readable text.",
                        "type": "object",
                        "examples":
                        [
                            {
                                "nl": "Nederlandse tekst",
                                "fr": "Texte français",
                                "de": "Deutscher Text",
                                "en": "English text"
                            }
                        ],
                        "properties":
                        {
                            "nl":
                            {
                                "type": "string",
                                "description": "Dutch reason",
                                "example": "Nederlandse reden",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "fr":
                            {
                                "type": "string",
                                "description": "French reason",
                                "example": "Raison français",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "de":
                            {
                                "type": "string",
                                "description": "German reason",
                                "example": "Deutscher Grund",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "en":
                            {
                                "type": "string",
                                "description": "English reason",
                                "example": "English reason",
                                "pattern": "\\S",
                                "minLength": 1
                            }
                        }
                    }
                },
                "required":
                [
                    "type"
                ],
                "examples":
                [
                    {
                        "type": "Available"
                    },
                    {
                        "type": "TemporarilyUnavailable",
                        "reason":
                        {
                            "nl": "Uitgesteld wegens covid-19",
                            "en": "Postponed due to covid-19"
                        }
                    },
                    {
                        "type": "Unavailable",
                        "reason":
                        {
                            "nl": "Permanent gesloten"
                        }
                    }
                ]
            },
            "Event-subEvent":
            {
                "title": "event.subEvent",
                "type": "array",
                "description": "A list of occurrences of the [event](./models/event.json) when using the `single` or `multiple` [calendarType](./models/event-calendarType.json).",
                "examples":
                [
                    [
                        {
                            "id": 0,
                            "startDate": "2021-05-17T16:00:00+00:00",
                            "endDate": "2021-05-17T22:00:00+00:00",
                            "status":
                            {
                                "type": "Available"
                            },
                            "bookingAvailability":
                            {
                                "type": "Available"
                            }
                        }
                    ],
                    [
                        {
                            "id": 0,
                            "startDate": "2021-05-17T16:00:00+00:00",
                            "endDate": "2021-05-17T22:00:00+00:00",
                            "status":
                            {
                                "type": "Available"
                            },
                            "bookingAvailability":
                            {
                                "type": "Available"
                            }
                        },
                        {
                            "id": 1,
                            "startDate": "2021-05-20T16:00:00+00:00",
                            "endDate": "2021-05-20T22:00:00+00:00",
                            "status":
                            {
                                "type": "Available"
                            },
                            "bookingAvailability":
                            {
                                "type": "Available"
                            }
                        }
                    ]
                ],
                "minItems": 1,
                "items":
                {
                    "type": "object",
                    "properties":
                    {
                        "id":
                        {
                            "type": "integer",
                            "description": "Index of the subEvent on the parent event. `0` for the first subEvent, `1` for the second event, and so on.",
                            "example": 0
                        },
                        "startDate":
                        {
                            "$ref": "#/components/schemas/Event-startDate"
                        },
                        "endDate":
                        {
                            "$ref": "#/components/schemas/Event-endDate"
                        },
                        "status":
                        {
                            "$ref": "#/components/schemas/Event-status"
                        },
                        "bookingAvailability":
                        {
                            "$ref": "#/components/schemas/Event-bookingAvailability"
                        }
                    },
                    "required":
                    [
                        "startDate",
                        "endDate"
                    ]
                }
            },
            "Event-terms":
            {
                "type": "array",
                "title": "event.terms",
                "description": "A list of taxonomy terms used to categorize the [event](./models/event.json).\n\nTerms are pre-defined and can be found using our [guide about taxonomy terms](../docs/taxonomy-api/terms.md).\n\nAn event requires at least one term, to define its type. (For example a concert, theater show, ...)",
                "uniqueItems": true,
                "minItems": 1,
                "contains":
                {
                    "properties":
                    {
                        "domain":
                        {
                            "const": "eventtype"
                        }
                    }
                },
                "minContains": 1,
                "maxContains": 1,
                "items":
                {
                    "title": "",
                    "type": "object",
                    "description": "A taxonomy term used to categorize events.\n\nAll events require exactly one term of the `eventtype` domain, and can optionally contain other terms.\n\nWhen reading events, all properties will be available. When creating or updating events only the `id` is required to be included.",
                    "examples":
                    [
                        {
                            "id": "0.50.4.0.0",
                            "label": "Concert",
                            "domain": "eventtype"
                        }
                    ],
                    "properties":
                    {
                        "id":
                        {
                            "type": "string",
                            "description": "Unique id of the term. For example `0.50.4.0.0`.",
                            "example": "0.50.4.0.0"
                        },
                        "label":
                        {
                            "type": "string",
                            "description": "Human-readable label of the term. Currently only available in Dutch. For example `Concert`.",
                            "example": "Concert"
                        },
                        "domain":
                        {
                            "type": "string",
                            "example": "eventtype",
                            "description": "The domain of the term. Can be one of `eventtype`, `theme`, or `facility`.",
                            "enum":
                            [
                                "eventtype",
                                "theme",
                                "facility"
                            ]
                        }
                    },
                    "required":
                    [
                        "id"
                    ]
                },
                "examples":
                [
                    [
                        {
                            "id": "0.50.4.0.0",
                            "label": "Concert",
                            "domain": "eventtype"
                        }
                    ]
                ]
            },
            "Event-typicalAgeRange":
            {
                "title": "event.typicalAgeRange",
                "description": "Indicates the minimum and maximum age to attend the [event](./models/event.json). For example `6-12`, `0-12`, `-12`, or `6-`.",
                "type": "string",
                "examples":
                [
                    "6-12",
                    "-12",
                    "6-"
                ],
                "pattern": "^[\\d]*-[\\d]*$"
            },
            "Event-videos":
            {
                "title": "event.videos",
                "description": "Describes an array of video objects that are linked to an event.",
                "type": "array",
                "items":
                {
                    "type": "object",
                    "description": "A video object that is linked to an event or a place.",
                    "properties":
                    {
                        "id":
                        {
                            "$ref": "#/components/schemas/Common-string-uuid-readOnly",
                            "description": "The unique id of the video, generated by UiTdatabank."
                        },
                        "url":
                        {
                            "$ref": "#/components/schemas/Common-string-uri-video"
                        },
                        "embedUrl":
                        {
                            "$ref": "#/components/schemas/Common-string-uri-readOnly",
                            "description": "The url that can be used to embed the video inside an iFrame."
                        },
                        "language":
                        {
                            "$ref": "#/components/schemas/Common-language",
                            "description": "The language of the video.\nCan be one of `nl`, `fr`, `de`, or `en`."
                        },
                        "copyrightHolder":
                        {
                            "$ref": "#/components/schemas/Common-copyrightHolder",
                            "description": "The copyright holder of the video source."
                        }
                    },
                    "required":
                    [
                        "url",
                        "language"
                    ]
                },
                "examples":
                [
                    [
                        {
                            "id": "b504cf44-9ab8-4641-9934-38d1cc67242c",
                            "url": "https://www.youtube.com/watch?v=cEItmb_a20D",
                            "embedUrl": "https://www.youtube.com/embed/cEItmb_a20D",
                            "language": "nl",
                            "copyrightHolder": "publiq"
                        }
                    ],
                    [
                        {
                            "id": "46e9ea9f-fc42-4759-a81b-4308467b7c35",
                            "url": "https://www.vimeo.com/54fdrg",
                            "embedUrl": "https://player.vimeo.com/video/54fdrg",
                            "language": "nl"
                        }
                    ],
                    [
                        {
                            "id": "b504cf44-9ab8-4641-9934-38d1cc67242c",
                            "url": "https://www.youtube.com/watch?v=cEItmb_a20D",
                            "embedUrl": "https://www.youtube.com/embed/cEItmb_a20D",
                            "language": "nl",
                            "copyrightHolder": "publiq"
                        },
                        {
                            "id": "b504cf44-9ab8-4641-9934-38d1cc67242c",
                            "url": "https://www.youtube.com/shorts/ViOS7SeT0HE",
                            "embedUrl": "https://www.youtube.com/shorts/ViOS7SeT0HE",
                            "language": "nl",
                            "copyrightHolder": "publiq"
                        },
                        {
                            "id": "46e9ea9f-fc42-4759-a81b-4308467b7c35",
                            "url": "https://www.vimeo.com/54fdrg",
                            "embedUrl": "https://player.vimeo.com/video/54fdrg",
                            "language": "nl"
                        }
                    ]
                ]
            },
            "Event-workflowStatus":
            {
                "title": "event.workflowStatus",
                "type": "string",
                "description": "The status in the moderation workflow.\n\nCan be one of four types:\n\n- `DRAFT`: Should not be visible on publication channels yet\n- `READY_FOR_VALIDATION`: Submitted for validation. Some publication channels may choose to show these.\n- `APPROVED`: Approved, will be visible on all publication channels (depending on the `availableFrom` and `availableTo`). Only possible if you have moderation permissions.\n- `REJECTED`: Rejected, will be hidden from all publication channels. Only possible if you have moderation permissions.\n- `DELETED`: Removed and should not be visible on any publication channels.",
                "enum":
                [
                    "DRAFT",
                    "READY_FOR_VALIDATION",
                    "APPROVED",
                    "REJECTED",
                    "DELETED"
                ],
                "examples":
                [
                    "DRAFT"
                ]
            },
            "Event":
            {
                "type": "object",
                "title": "event",
                "description": "A cultural, sport, or pastime activity.\n\nFor more information: <a href=\"https://docs.publiq.be/docs/uitdatabank/entry-api/events/what-are-events\">What are events?</a>",
                "allOf":
                [
                    {
                        "properties":
                        {
                            "@id":
                            {
                                "$ref": "#/components/schemas/Event-@id"
                            },
                            "mainLanguage":
                            {
                                "$ref": "#/components/schemas/Event-mainLanguage"
                            },
                            "name":
                            {
                                "$ref": "#/components/schemas/Event-name"
                            },
                            "terms":
                            {
                                "$ref": "#/components/schemas/Event-terms"
                            },
                            "location":
                            {
                                "$ref": "#/components/schemas/Event-location"
                            },
                            "calendarType":
                            {
                                "$ref": "#/components/schemas/Event-calendarType"
                            },
                            "startDate":
                            {
                                "$ref": "#/components/schemas/Event-startDate"
                            },
                            "endDate":
                            {
                                "$ref": "#/components/schemas/Event-endDate"
                            },
                            "attendanceMode":
                            {
                                "$ref": "#/components/schemas/Event-attendanceMode"
                            },
                            "onlineUrl":
                            {
                                "$ref": "#/components/schemas/Event-onlineUrl"
                            },
                            "status":
                            {
                                "$ref": "#/components/schemas/Event-status"
                            },
                            "subEvent":
                            {
                                "$ref": "#/components/schemas/Event-subEvent"
                            },
                            "openingHours":
                            {
                                "$ref": "#/components/schemas/Event-openingHours"
                            },
                            "availableFrom":
                            {
                                "$ref": "#/components/schemas/Event-availableFrom"
                            },
                            "availableTo":
                            {
                                "$ref": "#/components/schemas/Event-availableTo"
                            },
                            "organizer":
                            {
                                "$ref": "#/components/schemas/Event-organizer"
                            },
                            "sameAs":
                            {
                                "$ref": "#/components/schemas/Event-sameAs"
                            },
                            "workflowStatus":
                            {
                                "$ref": "#/components/schemas/Event-workflowStatus"
                            },
                            "audience":
                            {
                                "$ref": "#/components/schemas/Event-audience"
                            },
                            "languages":
                            {
                                "$ref": "#/components/schemas/Event-languages"
                            },
                            "completedLanguages":
                            {
                                "$ref": "#/components/schemas/Event-completedLanguages"
                            },
                            "typicalAgeRange":
                            {
                                "$ref": "#/components/schemas/Event-typicalAgeRange"
                            },
                            "description":
                            {
                                "$ref": "#/components/schemas/Event-description"
                            },
                            "priceInfo":
                            {
                                "$ref": "#/components/schemas/Event-priceInfo"
                            },
                            "contactPoint":
                            {
                                "$ref": "#/components/schemas/Event-contactPoint"
                            },
                            "bookingInfo":
                            {
                                "$ref": "#/components/schemas/Event-bookingInfo"
                            },
                            "mediaObject":
                            {
                                "$ref": "#/components/schemas/Event-mediaObject"
                            },
                            "image":
                            {
                                "$ref": "#/components/schemas/Event-image"
                            },
                            "videos":
                            {
                                "$ref": "#/components/schemas/Event-videos"
                            },
                            "labels":
                            {
                                "$ref": "#/components/schemas/Event-labels"
                            },
                            "hiddenLabels":
                            {
                                "$ref": "#/components/schemas/Event-hiddenLabels"
                            },
                            "production":
                            {
                                "$ref": "#/components/schemas/Event-production"
                            },
                            "bookingAvailability":
                            {
                                "$ref": "#/components/schemas/Event-bookingAvailability"
                            },
                            "created":
                            {
                                "$ref": "#/components/schemas/Event-created"
                            },
                            "modified":
                            {
                                "$ref": "#/components/schemas/Event-modified"
                            },
                            "creator":
                            {
                                "$ref": "#/components/schemas/Event-creator"
                            },
                            "contributors":
                            {
                                "$ref": "#/components/schemas/Event-contributors"
                            },
                            "completeness":
                            {
                                "$ref": "#/components/schemas/Common-completeness"
                            },
                            "calendarSummary":
                            {
                                "$ref": "#/components/schemas/Event-calendarSummary"
                            }
                        },
                        "required":
                        [
                            "mainLanguage",
                            "name",
                            "terms",
                            "location",
                            "calendarType"
                        ]
                    },
                    {
                        "if":
                        {
                            "required":
                            [
                                "calendarType"
                            ],
                            "properties":
                            {
                                "calendarType":
                                {
                                    "const": "periodic"
                                }
                            }
                        },
                        "then":
                        {
                            "required":
                            [
                                "startDate",
                                "endDate"
                            ]
                        }
                    },
                    {
                        "if":
                        {
                            "required":
                            [
                                "calendarType"
                            ],
                            "properties":
                            {
                                "calendarType":
                                {
                                    "const": "single"
                                }
                            }
                        },
                        "then":
                        {
                            "required":
                            [
                                "subEvent"
                            ]
                        }
                    },
                    {
                        "if":
                        {
                            "required":
                            [
                                "calendarType"
                            ],
                            "properties":
                            {
                                "calendarType":
                                {
                                    "const": "multiple"
                                }
                            }
                        },
                        "then":
                        {
                            "required":
                            [
                                "subEvent"
                            ]
                        }
                    }
                ]
            },
            "Image":
            {
                "type": "object",
                "properties":
                {
                    "@id":
                    {
                        "$ref": "#/components/schemas/Common-string-uri",
                        "description": "The unique URI of the image resource, as included in the response of the image upload request. Not required if `id` is given."
                    },
                    "id":
                    {
                        "$ref": "#/components/schemas/Common-string-uuid",
                        "description": "The unique UUID (generated by UiTdatabank) of the image. Can be used instead of `@id`."
                    },
                    "contentUrl":
                    {
                        "$ref": "#/components/schemas/Common-string-uri-readOnly",
                        "description": "URL of the image file."
                    },
                    "thumbnailUrl":
                    {
                        "$ref": "#/components/schemas/Common-string-uri-readOnly",
                        "description": "URL to a thumbnail image."
                    },
                    "description":
                    {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "\\S",
                        "description": "Description of the image object, in the language used in the `language` property of the image object. If omitted, the description that was given when the image was uploaded will be used."
                    },
                    "copyrightHolder":
                    {
                        "$ref": "#/components/schemas/Common-copyrightHolder",
                        "description": "Name of the copyright holder of the image. If omitted, the copyright holder that was given when the image was uploaded will be used."
                    },
                    "inLanguage":
                    {
                        "$ref": "#/components/schemas/Common-language",
                        "description": "Locale of text used in the image and its description. If omitted, the language that was given when the image was uploaded will be used."
                    }
                },
                "required":
                [
                    "@id"
                ],
                "examples":
                [
                    {
                        "@id": "https://io-test.uitdatabank.be/images/546a90cd-a238-417b-aa98-1b6c50c1345c",
                        "id": "546a90cd-a238-417b-aa98-1b6c50c1345c",
                        "contentUrl": "https://images-test.uitdatabank.be/546a90cd-a238-417b-aa98-1b6c50c1345c.jpeg",
                        "thumbnailUrl": "https://images-test.uitdatabank.be/546a90cd-a238-417b-aa98-1b6c50c1345c.jpeg",
                        "description": "Een voorbeeld beschrijving",
                        "copyrightHolder": "Jan",
                        "inLanguage": "nl"
                    }
                ]
            },
            "Offer-calendarSummary_Detail":
            {
                "description": "Contains all Dutch calendar summaries",
                "title": "offer.calendarSummary.detail",
                "type": "object",
                "properties":
                {
                    "text":
                    {
                        "type": "object",
                        "description": "Textual represenation of the date of the event / place",
                        "properties":
                        {
                            "xs":
                            {
                                "type": "string",
                                "description": "Extra small date, example \"28 nov\""
                            },
                            "sm":
                            {
                                "type": "string",
                                "description": "Small date, example: Tot 28 nov 2022"
                            },
                            "md":
                            {
                                "type": "string",
                                "description": "Medium date, example: Ma 28 november 2022 (uitverkocht)"
                            },
                            "lg":
                            {
                                "type": "string",
                                "description": "Large date, example: Maandag 28 november 2022 van 20:00 tot 21:00 (Volzet of uitverkocht)"
                            }
                        }
                    },
                    "html":
                    {
                        "type": "object",
                        "description": "HTML represenation of the date of the event / place",
                        "properties":
                        {
                            "xs":
                            {
                                "type": "string",
                                "description": "Extra date label in HTML"
                            },
                            "sm":
                            {
                                "type": "string",
                                "description": "Small date in HTML"
                            },
                            "md":
                            {
                                "type": "string",
                                "description": "Medium date in HTML"
                            },
                            "lg":
                            {
                                "type": "string",
                                "description": "Large date in HTML"
                            }
                        }
                    }
                },
                "examples":
                [
                    {
                        "text":
                        {
                            "sm": "Tot 30 jun 2021"
                        },
                        "html":
                        {
                            "lg": "<time itemprop=\"startDate\" datetime=\"2022-11-28T20:00:00+01:00\"><span class=\"cf-weekday cf-meta\">Maandag</span> <span class=\"cf-date\">28 november 2022</span> <span class=\"cf-from cf-meta\">van</span> <span class=\"cf-time\">20:00</span></time> <span class=\"cf-to cf-meta\">tot</span> <time itemprop=\"endDate\" datetime=\"2022-11-28T21:00:00+01:00\"><span class=\"cf-time\">21:00</span></time> <span class=\"cf-status\">(Volzet of uitverkocht)</span>"
                        }
                    }
                ]
            },
            "Organizer-@id":
            {
                "title": "organizer.@id",
                "type": "string",
                "format": "uri",
                "description": "A unique URI that acts as globally unique ID for the [organizer](./models/organizer.json). Based on [JSON-LD node identifiers](https://www.w3.org/TR/json-ld/#node-identifiers).",
                "examples":
                [
                    "https://io-test.uitdatabank.be/organizers/5cf42d51-3a4f-46f0-a8af-1cf672be8c84"
                ],
                "pattern": "^http[s]?:\\/\\/.+?\\/organizer[s]?\\/([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-?[0-9A-Fa-f]{12})[\\/]?"
            },
            "Organizer-address":
            {
                "title": "organizer.address",
                "description": "The address the [organizer](./models/organizer.json) is located at. Localized because some parts like the municipality or street address can be different in Dutch, French, German and/or English.\n\nRequires at least one locale, specifically the one defined in the [mainLanguage](./models/organizer-mainLanguage.json) of the organizer.\n\n**Only add a localized version if it's an official variant!**",
                "type": "object",
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Common-address-localized",
                        "description": "An address in the `nl` (Dutch) language."
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Common-address-localized",
                        "description": "An address in the `fr` (French) language."
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Common-address-localized",
                        "description": "An address in the `de` (German) language."
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Common-address-localized",
                        "description": "An address in the `en` (English) language."
                    }
                },
                "examples":
                [
                    {
                        "nl":
                        {
                            "addressCountry": "BE",
                            "addressLocality": "Brussel",
                            "postalCode": "1000",
                            "streetAddress": "Wetstraat 1"
                        },
                        "fr":
                        {
                            "addressCountry": "BE",
                            "addressLocality": "Bruxelles",
                            "postalCode": "1000",
                            "streetAddress": "Rue de la Loi 1"
                        }
                    }
                ]
            },
            "Organizer-completedLanguages":
            {
                "title": "organizer.completedLanguages",
                "description": "List of languages that _every_ localizable property on the [organizer](./models/organizer.json) is available in.\n\nAdded automatically by UiTdatabank based on the languages present in localized properties.\n\nSee also [languages](./models/organizer-languages.json).",
                "type": "array",
                "readOnly": true,
                "minItems": 1,
                "items":
                {
                    "type": "string",
                    "enum":
                    [
                        "nl",
                        "fr",
                        "de",
                        "en"
                    ],
                    "example": "nl"
                },
                "examples":
                [
                    [
                        "nl",
                        "fr"
                    ]
                ]
            },
            "Organizer-contactPoint":
            {
                "title": "organizer.contactPoint",
                "description": "Contact info of the [organizer](./models/organizer.json), containing one or more phone numbers, email addresses, and/or website URLs. [Here is a detailed guide](./entry-api/shared/booking-and-contact-info#contactpoint) with more information.",
                "type": "object",
                "properties":
                {
                    "phone":
                    {
                        "type": "array",
                        "description": "List of phone numbers for contact purposes (can be empty)",
                        "minItems": 0,
                        "items":
                        {
                            "type": "string",
                            "description": "Phone number for contact purposes.",
                            "minLength": 1,
                            "pattern": "\\S"
                        }
                    },
                    "email":
                    {
                        "type": "array",
                        "description": "List of email addresses for contact purposes (can be empty)",
                        "minItems": 0,
                        "items":
                        {
                            "type": "string",
                            "description": "Email address for contact purposes.",
                            "format": "email",
                            "example": "info@example.com"
                        }
                    },
                    "url":
                    {
                        "type": "array",
                        "description": "List of URLs for contact purposes (can be empty)",
                        "minItems": 0,
                        "items":
                        {
                            "$ref": "#/components/schemas/Common-string-uri",
                            "description": "URL to a website for contact purposes."
                        }
                    }
                },
                "examples":
                [
                    {
                        "phone":
                        [
                            "+32/1234567890"
                        ],
                        "email":
                        [
                            "info@example.com"
                        ],
                        "url":
                        [
                            "https://www.example.com"
                        ]
                    }
                ]
            },
            "Organizer-contributors":
            {
                "x-stoplight":
                {
                    "id": "428bc0c3a9842"
                },
                "title": "organizer.contributors",
                "readOnly": true,
                "description": "List of contributors on an [organizer](./models/organizer.json). Only included if you request the organizer with an authenticated user who has the \"Aanbod bewerken\" permission on the organizer.  [Here is a detailed guide](./entry-api/shared/contributors) with more information.",
                "type": "array",
                "minItems": 0,
                "uniqueItems": true,
                "examples":
                [
                    [
                        "info@publiq.be",
                        "vragen@uitdatabank.be"
                    ]
                ],
                "items":
                {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                }
            },
            "Organizer-created":
            {
                "title": "organizer.created",
                "description": "Date formatted as an ISO-8601 datetime, added automatically by UiTdatabank based on the date & time the [organizer](./models/organizer.json) was created at.\n\nFor example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Organizer-creator":
            {
                "title": "organizer.creator",
                "description": "The unique identifier of the creator of the [organizer](./models/organizer.json). Usually a UUID, but can historally be an e-mail address.\n\nAdded automatically by UiTdatabank based on the authentication credentials used to create the organizer.",
                "type": "string",
                "examples":
                [
                    "auth0|45c0d021-c78f-445f-adef-be3355b23e4f",
                    "rLlc90TSFBDRQbZwzP5vm2niDXI1CZef@clients",
                    "a9363e98-8a24-46a9-ad29-f175d7181138",
                    "google-oauth2|108326107941662286958",
                    "example@emails-are-legacy-but-may-occur.com"
                ],
                "minLength": 1,
                "pattern": "\\S",
                "readOnly": true
            },
            "Organizer-description":
            {
                "title": "organizer.description",
                "description": "A human-readable, internationalized description of the [organizer](./models/organizer.json).\n\nRequires at least one value, for the language specified in the [mainLanguage](./models/organizer-mainLanguage.json) property.",
                "type": "object",
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `nl` (Dutch) language."
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `fr` (French) language."
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `de` (German) language."
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `en` (English) language."
                    }
                },
                "examples":
                [
                    {
                        "nl": "Voorbeeld beschrijving. Lorem ipsum dolor sit amet.",
                        "fr": "Description d'exemple. Lorem ipsum dolor sit amet.",
                        "de": "Beispiel Beschreibung. Lorem ipsum dolor sit amet.",
                        "en": "Example description. Lorem ipsum dolor sit amet."
                    }
                ]
            },
            "Organizer-educationalDescription":
            {
                "title": "organizer.educationalDescription",
                "description": "A human-readable, internationalized educational description of the [organizer](./models/organizer.json) that can be used as a description targeted to schools and teachers.\n\nRequires at least one value, for the language specified in the [mainLanguage](./models/organizer-mainLanguage.json) property.",
                "type": "object",
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `nl` (Dutch) language."
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `fr` (French) language."
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `de` (German) language."
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `en` (English) language."
                    }
                },
                "examples":
                [
                    {
                        "nl": "Voorbeeld beschrijving. Lorem ipsum dolor sit amet.",
                        "fr": "Description d'exemple. Lorem ipsum dolor sit amet.",
                        "de": "Beispiel Beschreibung. Lorem ipsum dolor sit amet.",
                        "en": "Example description. Lorem ipsum dolor sit amet."
                    }
                ]
            },
            "Organizer-geo":
            {
                "title": "organizer.geo",
                "description": "Geographic coordinates corresponding to the [address](./models/organizer-address.json) the organizer is located at. Calculated automatically by UiTdatabank.",
                "type": "object",
                "properties":
                {
                    "latitude":
                    {
                        "type": "number",
                        "format": "float",
                        "minimum": -90,
                        "maximum": 90,
                        "description": "A geographic coordinate that specifies the north–south position of a point on the Earth's surface from the equator to one of the poles."
                    },
                    "longitude":
                    {
                        "type": "number",
                        "format": "float",
                        "minimum": -180,
                        "maximum": 180,
                        "description": "A geographic coordinate that specifies the east–west position of a point on the Earth's surface from Greenwich, England."
                    }
                },
                "required":
                [
                    "latitude",
                    "longitude"
                ],
                "readOnly": true,
                "examples":
                [
                    {
                        "latitude": 50.8816177,
                        "longitude": 4.7137986
                    }
                ]
            },
            "Organizer-hiddenLabels":
            {
                "title": "organizer.hiddenLabels",
                "description": "Same as [labels](./models/organizer-labels.json), but for labels that should not be visible for end users on publication channels and should instead only be used for filtering or other processing.\n\nLabels must match the `^(?=.{2,255}$)(?=.*\\S.*\\S.*)[^;]*$` pattern.",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/Common-label"
                },
                "uniqueItems": true,
                "minItems": 1,
                "examples":
                [
                    [
                        "example label with spaces",
                        "underscores_are_valid",
                        "dashes-are-valid"
                    ]
                ]
            },
            "Organizer-images":
            {
                "title": "organizer.images",
                "description": "Describes an array of images that are linked to an [organizer](./models/organizer.json). The main image of the organizer will always be set to the first image in this list when creating/updating an organizer with multiple images.",
                "type": "array",
                "minItems": 1,
                "items":
                {
                    "$ref": "#/components/schemas/Image"
                },
                "examples":
                [
                    [
                        {
                            "@id": "https://io-test.uitdatabank.be/images/546a90cd-a238-417b-aa98-1b6c50c1345c",
                            "id": "546a90cd-a238-417b-aa98-1b6c50c1345c",
                            "contentUrl": "https://images-test.uitdatabank.be/546a90cd-a238-417b-aa98-1b6c50c1345c.jpeg",
                            "thumbnailUrl": "https://images-test.uitdatabank.be/546a90cd-a238-417b-aa98-1b6c50c1345c.jpeg",
                            "description": "Een voorbeeld beschrijving",
                            "copyrightHolder": "Jan",
                            "inLanguage": "nl"
                        }
                    ]
                ]
            },
            "Organizer-labels":
            {
                "title": "organizer.labels",
                "description": "One or more labels that categorize the [organizer](./models/organizer.json). Labels do not have a defined set of possible values or a hierarchy.\n\nLabels are allowed to be visible for end users on publication channels.\n\nLabels must match the `^(?=.{2,255}$)(?=.*\\S.*\\S.*)[^;]*$` pattern.\n\nSee [hiddenLabels](./models/organizer-hiddenLabels.json) for labels that should not be visible on publication channels.",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/Common-label"
                },
                "uniqueItems": true,
                "minItems": 1,
                "examples":
                [
                    [
                        "example label with spaces",
                        "underscores_are_valid",
                        "dashes-are-valid"
                    ]
                ]
            },
            "Organizer-languages":
            {
                "title": "organizer.languages",
                "description": "List of languages that the [organizer](./models/organizer.json) is available in. (Not all localizable properties may contain every language though)\n\nAdded automatically by UiTdatabank based on the languages present in localized properties.\n\nSee also [completedLanguages](./models/organizer-completedLanguages.json).",
                "type": "array",
                "readOnly": true,
                "minItems": 1,
                "items":
                {
                    "type": "string",
                    "enum":
                    [
                        "nl",
                        "fr",
                        "de",
                        "en"
                    ],
                    "example": "nl"
                },
                "examples":
                [
                    [
                        "nl",
                        "fr"
                    ]
                ]
            },
            "Organizer-mainImage":
            {
                "title": "organizer.mainImage",
                "description": "URL to the main image of the [organizer](./models/organizer.json). Will be automatically be set by UiTdatabank to the URL of the first image in `images`.",
                "examples":
                [
                    "https://images-test.uitdatabank.be/546a90cd-a238-417b-aa98-1b6c50c1345c.jpeg"
                ],
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]?:\\/\\/",
                "readOnly": true
            },
            "Organizer-mainLanguage":
            {
                "title": "organizer.mainLanguage",
                "description": "The main language that the [organizer](./models/organizer.json) is described in. All localized properties like [name](./models/organizer-name.json) and [description](./models/organizer-description.json) will be required to have at least a value for this language.\n\nCan be one of `nl`, `fr`, `de`, or `en`.",
                "type": "string",
                "enum":
                [
                    "nl",
                    "fr",
                    "de",
                    "en"
                ]
            },
            "Organizer-modified":
            {
                "title": "organizer.modified",
                "description": "Date formatted as an ISO-8601 datetime, added automatically by UiTdatabank based on the date & time the [organizer](./models/organizer.json) was last modified.\n\nFor example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Organizer-name":
            {
                "title": "organizer.name",
                "description": "The human-readable, localized name of the [organizer](./models/organizer.json).\n\nRequires at least one value, for the language specified in the [mainLanguage](./models/organizer-mainLanguage.json) property.",
                "minLength": 1,
                "maxLength": 90,
                "type": "object",
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `nl` (Dutch) language."
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `fr` (French) language."
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `de` (German) language."
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `en` (English) language."
                    }
                },
                "examples":
                [
                    {
                        "nl": "Voorbeeld van een naam",
                        "fr": "Exemple d'un nom",
                        "de": "Beispiel eines Namens",
                        "en": "Example of a name"
                    }
                ]
            },
            "Organizer-url":
            {
                "title": "organizer.url",
                "description": "The unique website of the organizer.",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]?:\\/\\/\\w",
                "examples":
                [
                    "https://www.example.com"
                ]
            },
            "Organizer-workflowStatus":
            {
                "type": "string",
                "title": "organizer.workflowStatus",
                "description": "The status of the [organizer](./models/organizer.json) in the moderation workflow.\n\nCan be one of two values:\n\n- `ACTIVE`: The organizer is created and can be used.\n- `DELETED`: The organizer was deleted and should not be visible on any publication channels.",
                "enum":
                [
                    "ACTIVE",
                    "DELETED"
                ],
                "examples":
                [
                    "active"
                ],
                "readOnly": true
            },
            "Organizer":
            {
                "title": "organizer",
                "type": "object",
                "description": "An organization that is hosting an event or is the owner of a location.\n\nFor more information: <a href=\"https://docs.publiq.be/docs/uitdatabank/entry-api/organizers/what-are-organizers\">What are organizers?</a>",
                "properties":
                {
                    "@id":
                    {
                        "$ref": "#/components/schemas/Organizer-@id"
                    },
                    "mainLanguage":
                    {
                        "$ref": "#/components/schemas/Organizer-mainLanguage"
                    },
                    "url":
                    {
                        "$ref": "#/components/schemas/Organizer-url"
                    },
                    "name":
                    {
                        "$ref": "#/components/schemas/Organizer-name"
                    },
                    "description":
                    {
                        "$ref": "#/components/schemas/Organizer-description"
                    },
                    "educationalDescription":
                    {
                        "$ref": "#/components/schemas/Organizer-educationalDescription"
                    },
                    "address":
                    {
                        "$ref": "#/components/schemas/Organizer-address"
                    },
                    "geo":
                    {
                        "$ref": "#/components/schemas/Organizer-geo"
                    },
                    "contactPoint":
                    {
                        "$ref": "#/components/schemas/Organizer-contactPoint"
                    },
                    "images":
                    {
                        "$ref": "#/components/schemas/Organizer-images"
                    },
                    "mainImage":
                    {
                        "$ref": "#/components/schemas/Organizer-mainImage"
                    },
                    "labels":
                    {
                        "$ref": "#/components/schemas/Organizer-labels"
                    },
                    "hiddenLabels":
                    {
                        "$ref": "#/components/schemas/Organizer-hiddenLabels"
                    },
                    "created":
                    {
                        "$ref": "#/components/schemas/Organizer-created"
                    },
                    "workflowStatus":
                    {
                        "$ref": "#/components/schemas/Organizer-workflowStatus"
                    },
                    "languages":
                    {
                        "$ref": "#/components/schemas/Organizer-languages"
                    },
                    "completedLanguages":
                    {
                        "$ref": "#/components/schemas/Organizer-completedLanguages"
                    },
                    "modified":
                    {
                        "$ref": "#/components/schemas/Organizer-modified"
                    },
                    "creator":
                    {
                        "$ref": "#/components/schemas/Organizer-creator"
                    },
                    "contributors":
                    {
                        "$ref": "#/components/schemas/Organizer-contributors"
                    },
                    "completeness":
                    {
                        "$ref": "#/components/schemas/Common-completeness"
                    }
                },
                "required":
                [
                    "mainLanguage",
                    "url",
                    "name"
                ]
            },
            "Place-@id":
            {
                "title": "place.@id",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]?:\\/\\/.+?\\/place[s]?\\/([0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-?[0-9A-Fa-f]{12})[\\/]?",
                "description": "A unique URI that acts as globally unique ID for the [place](./models/place.json). Based on (JSON-LD node identifiers)[https://www.w3.org/TR/json-ld/#node-identifiers].",
                "examples":
                [
                    "https://io-test.uitdatabank.be/place/85b04295-479c-40f5-b3dd-469dfb4387b3"
                ]
            },
            "Place-address":
            {
                "title": "place.address",
                "description": "The address the [place](./models/place.json) is located at. Localized because some parts like the municipality or street address can be different in Dutch, French, German and/or English.\n\nRequires at least one locale, specifically the one defined in the [mainLanguage](./models/place-mainLanguage.json) of the place.\n\n**Only add a localized version if it's an official variant!**",
                "type": "object",
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Common-address-localized",
                        "description": "An address in the `nl` (Dutch) language."
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Common-address-localized",
                        "description": "An address in the `fr` (French) language."
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Common-address-localized",
                        "description": "An address in the `de` (German) language."
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Common-address-localized",
                        "description": "An address in the `en` (English) language."
                    }
                },
                "examples":
                [
                    {
                        "nl":
                        {
                            "addressCountry": "BE",
                            "addressLocality": "Brussel",
                            "postalCode": "1000",
                            "streetAddress": "Wetstraat 1"
                        },
                        "fr":
                        {
                            "addressCountry": "BE",
                            "addressLocality": "Bruxelles",
                            "postalCode": "1000",
                            "streetAddress": "Rue de la Loi 1"
                        }
                    }
                ]
            },
            "Place-availableFrom":
            {
                "title": "place.availableFrom",
                "description": "The first date & time that the [place](./models/place.json) is allowed to be visible on publication channels.\n\nFormatted as an ISO-8601 datetime. For example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Place-availableTo":
            {
                "title": "place.availableTo",
                "description": "The last date & time that the [place](./models/place.json) is allowed to be visible on publication channels.\n\nAdded automatically by UiTdatabank based on either the [startDate](./models/place-startDate) or [endDate](./models/place-endDate.json) depending on the [event type](./models/place-terms.json).\n\nFormatted as an ISO-8601 datetime. For example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Place-bookingAvailability":
            {
                "title": "place.bookingAvailability",
                "description": "Indicates whether the place still has tickets or reservations available. Currently only contains a `type` which can only be `Available` for places (as opposed to events that can also have `Unavailable` when sold out), as a place can never be completely sold out forever. Can later be expanded with more detailed info.",
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "type": "string",
                        "enum":
                        [
                            "Available",
                            "Unavailable"
                        ],
                        "description": "One of two possible types.\n\n- `Available`:Tickets or reservations available\n- `Unavailable`: No more tickets or reservations available."
                    }
                },
                "required":
                [
                    "type"
                ]
            },
            "Place-bookingInfo":
            {
                "title": "place.bookingInfo",
                "description": "Booking info of the [place](./models/place.json), containing one or more phone numbers, email addresses, and/or website URLs. [Here is a detailed guide](./entry-api/shared/booking-and-contact-info#contactpoint) with more information.",
                "type": "object",
                "dependentRequired":
                {
                    "url":
                    [
                        "urlLabel"
                    ]
                },
                "examples":
                [
                    {
                        "phone": "+32/01234567890",
                        "email": "info@example.com",
                        "url": "https://www.example.com",
                        "urlLabel":
                        {
                            "nl": "Nederlandse tekst",
                            "fr": "Texte français",
                            "de": "Deutscher Text",
                            "en": "English text"
                        },
                        "availabilityStarts": "2021-05-17T22:00:00+00:00",
                        "availabilityEnds": "2021-05-17T22:00:00+00:00"
                    }
                ],
                "properties":
                {
                    "phone":
                    {
                        "type": "string",
                        "description": "Phone number for booking purposes.",
                        "minLength": 1,
                        "pattern": "\\S"
                    },
                    "email":
                    {
                        "type": "string",
                        "description": "Email address for booking purposes.",
                        "format": "email",
                        "example": "info@example.com"
                    },
                    "url":
                    {
                        "$ref": "#/components/schemas/Common-string-uri",
                        "description": "URL to a website for booking purposes."
                    },
                    "urlLabel":
                    {
                        "type": "object",
                        "description": "Call-to-action text to show for the link to the booking url. See [our suggested values](./entry-api/shared/booking-and-contact-info#urllabel).",
                        "minProperties": 1,
                        "examples":
                        [
                            {
                                "nl": "Nederlandse tekst",
                                "fr": "Texte français",
                                "de": "Deutscher Text",
                                "en": "English text"
                            }
                        ],
                        "properties":
                        {
                            "nl":
                            {
                                "type": "string",
                                "description": "Dutch description",
                                "example": "Nederlandse beschrijving",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "fr":
                            {
                                "type": "string",
                                "description": "French description",
                                "example": "Description français",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "de":
                            {
                                "type": "string",
                                "description": "German description",
                                "example": "Deutscher Beschreibung",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "en":
                            {
                                "type": "string",
                                "description": "English description",
                                "example": "English description",
                                "pattern": "\\S",
                                "minLength": 1
                            }
                        }
                    },
                    "availabilityStarts":
                    {
                        "description": "The date & time when the booking period starts",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-17T22:00:00+00:00",
                        "examples":
                        [
                            "2021-05-17T22:00:00+00:00"
                        ]
                    },
                    "availabilityEnds":
                    {
                        "description": "The date & time when the booking period ends",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-05-17T22:00:00+00:00",
                        "examples":
                        [
                            "2021-05-17T22:00:00+00:00"
                        ]
                    }
                }
            },
            "Place-calendarSummary":
            {
                "title": "place.calendarSummary",
                "type": "object",
                "description": "Only visible when adding the extra `embedCalendarSummaries` property to the search query. This contains one or more formatted human-readable summaries of the date/time info of the result.",
                "examples":
                [
                    {
                        "nl":
                        {
                            "text":
                            {
                                "xs": "28 nov"
                            }
                        },
                        "fr":
                        {
                            "text":
                            {
                                "xs": "28 nov"
                            }
                        },
                        "de":
                        {
                            "text":
                            {
                                "xs": "28 Nov"
                            }
                        },
                        "en":
                        {
                            "text":
                            {
                                "xs": "28 Nov"
                            }
                        }
                    },
                    {
                        "nl":
                        {
                            "text":
                            {
                                "xs": "28 nov"
                            }
                        },
                        "fr":
                        {
                            "text":
                            {
                                "xs": "28 nov"
                            }
                        },
                        "de":
                        {
                            "text":
                            {
                                "xs": "28 Nov"
                            }
                        },
                        "en":
                        {
                            "text":
                            {
                                "xs": "28 Nov"
                            }
                        }
                    }
                ],
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Offer-calendarSummary_Detail",
                        "description": "Contains all Dutch calendar summaries"
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Offer-calendarSummary_Detail",
                        "description": "Contains all French calendar summaries"
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Offer-calendarSummary_Detail",
                        "description": "Contains all German calendar summaries"
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Offer-calendarSummary_Detail",
                        "description": "Contains all English calendar summaries"
                    }
                },
                "readOnly": true
            },
            "Place-calendarType":
            {
                "type": "string",
                "title": "place.calendarType",
                "description": "Determines how long the [place](./models/place) exists.\n\nPossible values: `periodic`, `permanent`.\n\n- **periodic**: For places that only exist for a specific period. **Must** have a [startDate](./models/place-startDate.json) and [endDate](./models/place-endDate.json). Can optionally have [openingHours](./models/place-openingHours.json).\n\n- **permanent**: For places that exist permanently. Can optionally have [openingHours](./models/place-openingHours.json). [Here is a detailed guide](./entry-api/shared/calendar-info#calendartype) with more information.",
                "enum":
                [
                    "periodic",
                    "permanent"
                ],
                "examples":
                [
                    "periodic"
                ]
            },
            "Place-completedLanguages":
            {
                "title": "place.completedLanguages",
                "description": "List of languages that _every_ localizable property on the [place](./models/place.json) is available in.\n\nAdded automatically by UiTdatabank based on the languages present in localized properties.\n\nSee also [languages](./models/place-languages.json).",
                "type": "array",
                "readOnly": true,
                "minItems": 1,
                "items":
                {
                    "type": "string",
                    "enum":
                    [
                        "nl",
                        "fr",
                        "de",
                        "en"
                    ],
                    "example": "nl"
                },
                "examples":
                [
                    [
                        "nl",
                        "fr"
                    ]
                ]
            },
            "Place-contactPoint":
            {
                "title": "place.contactPoint",
                "description": "Contact info of the [place](./models/place.json), containing one or more phone numbers, email addresses, and/or website URLs. [Here is a detailed guide](./entry-api/shared/booking-and-contact-info#contactpoint) with more information.",
                "type": "object",
                "properties":
                {
                    "phone":
                    {
                        "type": "array",
                        "description": "List of phone numbers for contact purposes (can be empty)",
                        "minItems": 0,
                        "items":
                        {
                            "type": "string",
                            "description": "Phone number for contact purposes.",
                            "minLength": 1,
                            "pattern": "\\S"
                        }
                    },
                    "email":
                    {
                        "type": "array",
                        "description": "List of email addresses for contact purposes (can be empty)",
                        "minItems": 0,
                        "items":
                        {
                            "type": "string",
                            "description": "Email address for contact purposes.",
                            "format": "email",
                            "example": "info@example.com"
                        }
                    },
                    "url":
                    {
                        "type": "array",
                        "description": "List of URLs for contact purposes (can be empty)",
                        "minItems": 0,
                        "items":
                        {
                            "$ref": "#/components/schemas/Common-string-uri",
                            "description": "URL to a website for contact purposes."
                        }
                    }
                },
                "examples":
                [
                    {
                        "phone":
                        [
                            "+32/1234567890"
                        ],
                        "email":
                        [
                            "info@example.com"
                        ],
                        "url":
                        [
                            "https://www.example.com"
                        ]
                    }
                ]
            },
            "Place-contributors":
            {
                "x-stoplight":
                {
                    "id": "6c50cec2bdd57"
                },
                "title": "place.contributors",
                "readOnly": true,
                "description": "List of contributors on a [place](./models/place.json). Only included if you request the place with an authenticated user who has the \"Aanbod bewerken\" permission on the place. [Here is a detailed guide](./entry-api/shared/contributors) with more information.",
                "type": "array",
                "minItems": 0,
                "uniqueItems": true,
                "examples":
                [
                    [
                        "info@publiq.be",
                        "vragen@uitdatabank.be"
                    ]
                ],
                "items":
                {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                }
            },
            "Place-created":
            {
                "title": "place.created",
                "description": "Date formatted as an ISO-8601 datetime, added automatically by UiTdatabank based on the date & time the [place](./models/place.json) was created at.\n\nFor example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Place-creator":
            {
                "title": "place.creator",
                "description": "The unique identifier of the creator of the [place](./models/place.json). Usually a UUID, but can historally be an e-mail address.\n\nAdded automatically by UiTdatabank based on the authentication credentials used to create the place.",
                "type": "string",
                "examples":
                [
                    "auth0|45c0d021-c78f-445f-adef-be3355b23e4f",
                    "rLlc90TSFBDRQbZwzP5vm2niDXI1CZef@clients",
                    "a9363e98-8a24-46a9-ad29-f175d7181138",
                    "google-oauth2|108326107941662286958",
                    "example@emails-are-legacy-but-may-occur.com"
                ],
                "minLength": 1,
                "pattern": "\\S",
                "readOnly": true
            },
            "Place-description":
            {
                "title": "place.description",
                "description": "A human-readable, internationalized description of the [place](./models/place.json).\n\nRequires at least one value, for the language specified in the [mainLanguage](./models/place-mainLanguage.json) property.",
                "type": "object",
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `nl` (Dutch) language."
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `fr` (French) language."
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `de` (German) language."
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Common-description-localized",
                        "description": "A human-readable description in the `en` (English) language."
                    }
                },
                "examples":
                [
                    {
                        "nl": "Voorbeeld beschrijving. Lorem ipsum dolor sit amet.",
                        "fr": "Description d'exemple. Lorem ipsum dolor sit amet.",
                        "de": "Beispiel Beschreibung. Lorem ipsum dolor sit amet.",
                        "en": "Example description. Lorem ipsum dolor sit amet."
                    }
                ]
            },
            "Place-endDate":
            {
                "title": "place.endDate",
                "description": "The date & time that the [place](./models/place.json) ends when using the `periodic` [calendarType](./models/place-calendarType.json), as an ISO-8601 date.\n\nFor example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Place-geo":
            {
                "title": "place.geo",
                "description": "Geographic coordinates corresponding to the [address](./models/place-address.json) the place is located at. Calculated automatically by UiTdatabank.",
                "type": "object",
                "properties":
                {
                    "latitude":
                    {
                        "type": "number",
                        "format": "float",
                        "minimum": -90,
                        "maximum": 90,
                        "description": "A geographic coordinate that specifies the north–south position of a point on the Earth's surface from the equator to one of the poles."
                    },
                    "longitude":
                    {
                        "type": "number",
                        "format": "float",
                        "minimum": -180,
                        "maximum": 180,
                        "description": "A geographic coordinate that specifies the east–west position of a point on the Earth's surface from Greenwich, England."
                    }
                },
                "required":
                [
                    "latitude",
                    "longitude"
                ],
                "readOnly": true,
                "examples":
                [
                    {
                        "latitude": 50.8816177,
                        "longitude": 4.7137986
                    }
                ]
            },
            "Place-hiddenLabels":
            {
                "title": "place.hiddenLabels",
                "description": "Same as [labels](./models/place-labels.json), but for labels that should not be visible for end users on publication channels and should instead only be used for filtering or other processing.",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/Common-label"
                },
                "uniqueItems": true,
                "minItems": 1,
                "examples":
                [
                    [
                        "example label with spaces",
                        "underscores_are_valid",
                        "dashes-are-valid"
                    ]
                ]
            },
            "Place-image":
            {
                "title": "place.image",
                "description": "URL to the main image of the [place](./models/place.json). Will be automatically be set by UiTdatabank to the URL of the first image in `mediaObject`.",
                "examples":
                [
                    "https://images-test.uitdatabank.be/546a90cd-a238-417b-aa98-1b6c50c1345c.jpeg"
                ],
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]?:\\/\\/",
                "readOnly": true
            },
            "Place-labels":
            {
                "title": "place.labels",
                "description": "One or more labels that categorize the [place](./models/place.json). Compared to [terms](./models/place-terms.json), labels do not have a defined set of possible values or a hierarchy.\n\nLabels are allowed to be visible for end users on publication channels.\n\nSee [hiddenLabels](./models/place-hiddenLabels.json) for labels that should not be visible on publication channels.",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/Common-label"
                },
                "uniqueItems": true,
                "minItems": 1,
                "examples":
                [
                    [
                        "example label with spaces",
                        "underscores_are_valid",
                        "dashes-are-valid"
                    ]
                ]
            },
            "Place-languages":
            {
                "title": "place.languages",
                "description": "List of languages that the [place](./models/place.json) is available in. (Not all localizable properties may contain every language though)\n\nAdded automatically by UiTdatabank based on the languages present in localized properties.\n\nSee also [completedLanguages](./models/place-completedLanguages.json).",
                "type": "array",
                "readOnly": true,
                "minItems": 1,
                "items":
                {
                    "type": "string",
                    "enum":
                    [
                        "nl",
                        "fr",
                        "de",
                        "en"
                    ],
                    "example": "nl"
                },
                "examples":
                [
                    [
                        "nl",
                        "fr"
                    ]
                ]
            },
            "Place-mainLanguage":
            {
                "title": "place.mainLanguage",
                "description": "The main language that the [place](./models/place.json) is described in. All localized properties like [name](./models/place-name.json) and [description](./models/place-description.json) will be required to have at least a value for this language.\n\nCan be one of `nl`, `fr`, `de`, or `en`.",
                "type": "string",
                "enum":
                [
                    "nl",
                    "fr",
                    "de",
                    "en"
                ]
            },
            "Place-mediaObject":
            {
                "title": "place.mediaObject",
                "description": "A list of media objects related to the [place](./models/place.json), in reality always images but called mediaObject for backward compatibility. The main image of the place will always be set to the first image in this list when creating/updating a place with multiple images.",
                "type": "array",
                "minItems": 1,
                "items":
                {
                    "$ref": "#/components/schemas/Image"
                },
                "examples":
                [
                    [
                        {
                            "@id": "https://io-test.uitdatabank.be/images/546a90cd-a238-417b-aa98-1b6c50c1345c",
                            "id": "546a90cd-a238-417b-aa98-1b6c50c1345c",
                            "contentUrl": "https://images-test.uitdatabank.be/546a90cd-a238-417b-aa98-1b6c50c1345c.jpeg",
                            "thumbnailUrl": "https://images-test.uitdatabank.be/546a90cd-a238-417b-aa98-1b6c50c1345c.jpeg",
                            "description": "Een voorbeeld beschrijving",
                            "copyrightHolder": "Jan",
                            "inLanguage": "nl"
                        }
                    ]
                ]
            },
            "Place-modified":
            {
                "title": "place.modified",
                "description": "Date formatted as an ISO-8601 datetime, added automatically by UiTdatabank based on the date & time the [place](./models/place.json) was last modified.\n\nFor example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Place-name":
            {
                "title": "place.name",
                "description": "The human-readable, localized name of the [place](./models/place.json).\n\nRequires at least one value, for the language specified in the [mainLanguage](./models/place-mainLanguage.json) property.",
                "minLength": 1,
                "maxLength": 90,
                "type": "object",
                "minProperties": 1,
                "properties":
                {
                    "nl":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `nl` (Dutch) language."
                    },
                    "fr":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `fr` (French) language."
                    },
                    "de":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `de` (German) language."
                    },
                    "en":
                    {
                        "$ref": "#/components/schemas/Common-name-localized",
                        "description": "A human-readable name in the `en` (English) language."
                    }
                },
                "examples":
                [
                    {
                        "nl": "Voorbeeld van een naam",
                        "fr": "Exemple d'un nom",
                        "de": "Beispiel eines Namens",
                        "en": "Example of a name"
                    }
                ]
            },
            "Place-openingHours":
            {
                "title": "place.openingHours",
                "description": "A list of multiple open/closed times and weekdays indicating when the [place](./models/place.json) is open.",
                "type": "array",
                "items":
                {
                    "type": "object",
                    "examples":
                    [
                        {
                            "opens": "09:00",
                            "closes": "17:00",
                            "dayOfWeek":
                            [
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday"
                            ]
                        }
                    ],
                    "properties":
                    {
                        "opens":
                        {
                            "type": "string",
                            "description": "Opening time on the related weekDays.",
                            "examples":
                            [
                                "17:00"
                            ],
                            "pattern": "^\\d?\\d:\\d\\d$"
                        },
                        "closes":
                        {
                            "type": "string",
                            "description": "Closing time on the related weekdays.",
                            "examples":
                            [
                                "17:00"
                            ],
                            "pattern": "^\\d?\\d:\\d\\d$"
                        },
                        "dayOfWeek":
                        {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "description": "One or more weekdays that the open/closing times are applicable for.",
                            "items":
                            {
                                "type": "string",
                                "enum":
                                [
                                    "monday",
                                    "tuesday",
                                    "wednesday",
                                    "thursday",
                                    "friday",
                                    "saturday",
                                    "sunday"
                                ],
                                "description": "A single weekday."
                            }
                        }
                    },
                    "required":
                    [
                        "opens",
                        "closes",
                        "dayOfWeek"
                    ]
                },
                "examples":
                [
                    [
                        {
                            "opens": "13:00",
                            "closes": "17:00",
                            "dayOfWeek":
                            [
                                "monday"
                            ]
                        },
                        {
                            "opens": "09:00",
                            "closes": "17:00",
                            "dayOfWeek":
                            [
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                                "saturday",
                                "sunday"
                            ]
                        }
                    ]
                ]
            },
            "Place-organizer":
            {
                "title": "place.organizer",
                "description": "A reference to an [organizer](./models/organizer.json) linked to the place. When writing a place it should only contain an `@id` property. When reading a place it will contain all the properties from the [organizer](./models/organizer.json).",
                "type": "object",
                "examples":
                [
                    {
                        "@id": "https://io-test.uitdatabank.be/organizers/5cf42d51-3a4f-46f0-a8af-1cf672be8c84"
                    }
                ],
                "properties":
                {
                    "@id":
                    {
                        "$ref": "#/components/schemas/Organizer-@id"
                    }
                },
                "required":
                [
                    "@id"
                ]
            },
            "Place-priceInfo":
            {
                "title": "place.priceInfo",
                "description": "A list of tariffs available for tickets/reservations to visit the [place](./models/place.json).",
                "type": "array",
                "minItems": 1,
                "contains":
                {
                    "properties":
                    {
                        "category":
                        {
                            "const": "base"
                        }
                    }
                },
                "minContains": 1,
                "maxContains": 1,
                "items":
                {
                    "allOf":
                    [
                        {
                            "type": "object",
                            "properties":
                            {
                                "category":
                                {
                                    "type": "string",
                                    "enum":
                                    [
                                        "base",
                                        "tariff",
                                        "uitpas"
                                    ],
                                    "example": "base",
                                    "description": "Indicates whether this is the base price or a custom tariff.\n`base` for the base price, and `tariff` for custom/extra tariffs.  Tariffs with category `uitpas` are automatically added by UiTdatabank and read-only. They will be updated whenever other tariffs change."
                                },
                                "price":
                                {
                                    "type": "number",
                                    "format": "float",
                                    "minimum": 0,
                                    "example": 10.5,
                                    "description": "The price of a ticket in this category."
                                },
                                "priceCurrency":
                                {
                                    "type": "string",
                                    "enum":
                                    [
                                        "EUR"
                                    ],
                                    "default": "EUR",
                                    "description": "The currency of the price. Currently only `EUR` is supported."
                                },
                                "name":
                                {
                                    "$ref": "#/components/schemas/Common-name",
                                    "description": "Name of a tariff inside priceInfo. Required if category is set to `tariff`. For the `base` category UiTdatabank will set a default. Requires at least one value, for the language specified in the `mainLanguage` property. Names must be unique (per language) when using multiple tarrifs."
                                }
                            },
                            "required":
                            [
                                "category",
                                "price"
                            ]
                        },
                        {
                            "if":
                            {
                                "required":
                                [
                                    "category"
                                ],
                                "properties":
                                {
                                    "category":
                                    {
                                        "const": "tariff"
                                    }
                                }
                            },
                            "then":
                            {
                                "required":
                                [
                                    "name"
                                ]
                            }
                        }
                    ]
                },
                "examples":
                [
                    [
                        {
                            "category": "base",
                            "price": 10.5,
                            "priceCurrency": "EUR",
                            "name":
                            {
                                "nl": "Basistarief",
                                "fr": "Tarif de base",
                                "en": "Base tariff",
                                "de": "Basisrate"
                            }
                        }
                    ],
                    [
                        {
                            "category": "base",
                            "price": 10.5,
                            "priceCurrency": "EUR",
                            "name":
                            {
                                "nl": "Basistarief",
                                "fr": "Tarif de base",
                                "en": "Base tariff",
                                "de": "Basisrate"
                            }
                        },
                        {
                            "category": "tariff",
                            "price": 8,
                            "priceCurrency": "EUR",
                            "name":
                            {
                                "nl": "Jongeren (<18j)",
                                "en": "Youth (<18yo)"
                            }
                        }
                    ]
                ]
            },
            "Place-sameAs":
            {
                "title": "place.sameAs",
                "description": "One or more URIs that represent the same [place](./models/place.json) on another API or website, not necessarily in JSON-LD format.\n\nAdded automatically by UiTdatabank based on info from other systems.\n\nFor example `http://www.uitinvlaanderen.be/agenda/p/test-place/85b04295-479c-40f5-b3dd-469dfb4387b3`.",
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "examples":
                [
                    [
                        "http://www.uitinvlaanderen.be/agenda/e/example/85b04295-479c-40f5-b3dd-469dfb4387b3"
                    ]
                ],
                "items":
                {
                    "$ref": "#/components/schemas/Common-string-uri"
                },
                "readOnly": true
            },
            "Place-startDate":
            {
                "title": "place.startDate",
                "description": "The date & time that the [place](./models/place.json) starts when using the `periodic` [calendarType](./models/place-calendarType.json), as an ISO-8601 date.\n\nFor example `2021-05-17T22:00:00+00:00`.",
                "type": "string",
                "format": "date-time",
                "examples":
                [
                    "2021-05-17T22:00:00+00:00"
                ]
            },
            "Place-status":
            {
                "title": "place.status",
                "description": "Indicates if the [place](./models/place.json) is still open for visitations or not.",
                "examples":
                [
                    {
                        "type": "Available"
                    },
                    {
                        "type": "TemporarilyUnavailable",
                        "reason":
                        {
                            "nl": "Tijdelijk gesloten wegens verbouwingswerken",
                            "en": "Temporarily closed for renovations"
                        }
                    },
                    {
                        "type": "Unavailable",
                        "reason":
                        {
                            "nl": "Permanent gesloten"
                        }
                    }
                ],
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "enum":
                        [
                            "Available",
                            "TemporarilyUnavailable",
                            "Unavailable"
                        ],
                        "example": "Available",
                        "description": "One of three possible status types.\n\n- `Available`: Happening or open as scheduled\n- `TemporarilyUnavailable`: Postponed or temporarily closed\n- `Unavailable`: Cancelled or permanently closed",
                        "type": "string"
                    },
                    "reason":
                    {
                        "description": "The reason of the status, as a localized human-readable text.",
                        "type": "object",
                        "examples":
                        [
                            {
                                "nl": "Nederlandse tekst",
                                "fr": "Texte français",
                                "de": "Deutscher Text",
                                "en": "English text"
                            }
                        ],
                        "properties":
                        {
                            "nl":
                            {
                                "type": "string",
                                "description": "Dutch reason",
                                "example": "Nederlandse reden",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "fr":
                            {
                                "type": "string",
                                "description": "French reason",
                                "example": "Raison français",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "de":
                            {
                                "type": "string",
                                "description": "German reason",
                                "example": "Deutscher Grund",
                                "pattern": "\\S",
                                "minLength": 1
                            },
                            "en":
                            {
                                "type": "string",
                                "description": "English reason",
                                "example": "English reason",
                                "pattern": "\\S",
                                "minLength": 1
                            }
                        }
                    }
                },
                "required":
                [
                    "type"
                ]
            },
            "Place-terms":
            {
                "type": "array",
                "title": "place.terms",
                "description": "A list of taxonomy terms used to categorize the [place](./models/place.json).\n\nTerms are pre-defined and can be found using our [guide about taxonomy terms](../docs/taxonomy-api/terms.md).\n\nA place requires at least one term, to define its type. (For example a museum, monument, ...)",
                "uniqueItems": true,
                "minItems": 1,
                "contains":
                {
                    "properties":
                    {
                        "domain":
                        {
                            "const": "eventtype"
                        }
                    }
                },
                "minContains": 1,
                "maxContains": 1,
                "examples":
                [
                    [
                        {
                            "id": "0.14.0.0.0",
                            "label": "Monument",
                            "domain": "eventtype"
                        }
                    ]
                ],
                "items":
                {
                    "title": "",
                    "type": "object",
                    "description": "A taxonomy term used to categorize places.\n\nAll places require exactly one term of the `eventtype` domain, and can optionally contain other terms.\n\nWhen reading places, all properties will be available. When creating or updating places only the `id` is required to be included.",
                    "examples":
                    [
                        {
                            "id": "0.14.0.0.0",
                            "label": "Concert",
                            "domain": "eventtype"
                        }
                    ],
                    "properties":
                    {
                        "id":
                        {
                            "type": "string",
                            "description": "Unique id of the term. For example `0.14.0.0.0`.",
                            "example": "0.14.0.0.0"
                        },
                        "label":
                        {
                            "type": "string",
                            "description": "Human-readable label of the term. Currently only available in Dutch. For example `Concert`.",
                            "example": "Monument"
                        },
                        "domain":
                        {
                            "type": "string",
                            "example": "eventtype",
                            "description": "The domain of the term. Can be one of `eventtype` or `facility`.",
                            "enum":
                            [
                                "facility",
                                "eventtype"
                            ]
                        }
                    },
                    "required":
                    [
                        "id"
                    ]
                }
            },
            "Place-typicalAgeRange":
            {
                "type": "string",
                "description": "Indicates the minimum and maximum age to visit the [place](./models/place.json). For example `6-12`, `0-12`, `-12`, or `6-`.",
                "title": "typicalAgeRange",
                "examples":
                [
                    "6-12",
                    "-12",
                    "6-"
                ],
                "pattern": "^[\\d]*-[\\d]*$"
            },
            "Place-videos":
            {
                "title": "place.videos",
                "description": "Describes an array of video objects that are linked to a place.",
                "type": "array",
                "items":
                {
                    "type": "object",
                    "description": "A video object that is linked to an event or a place.",
                    "properties":
                    {
                        "id":
                        {
                            "$ref": "#/components/schemas/Common-string-uuid-readOnly",
                            "description": "The unique id of the video, generated by UiTdatabank."
                        },
                        "url":
                        {
                            "$ref": "#/components/schemas/Common-string-uri-video"
                        },
                        "embedUrl":
                        {
                            "$ref": "#/components/schemas/Common-string-uri-readOnly",
                            "description": "The url that can be used to embed the video inside an iFrame."
                        },
                        "language":
                        {
                            "$ref": "#/components/schemas/Common-language",
                            "description": "The language of the video.\nCan be one of `nl`, `fr`, `de`, or `en`."
                        },
                        "copyrightHolder":
                        {
                            "$ref": "#/components/schemas/Common-copyrightHolder",
                            "description": "The copyright holder of the video source."
                        }
                    },
                    "required":
                    [
                        "url",
                        "language"
                    ]
                },
                "examples":
                [
                    [
                        {
                            "id": "b504cf44-9ab8-4641-9934-38d1cc67242c",
                            "url": "https://www.youtube.com/watch?v=cEItmb_a20D",
                            "embedUrl": "https://www.youtube.com/embed/cEItmb_a20D",
                            "language": "nl",
                            "copyrightHolder": "publiq"
                        }
                    ],
                    [
                        {
                            "id": "46e9ea9f-fc42-4759-a81b-4308467b7c35",
                            "url": "https://www.vimeo.com/54fdrg",
                            "embedUrl": "https://player.vimeo.com/video/54fdrg",
                            "language": "nl"
                        }
                    ],
                    [
                        {
                            "id": "b504cf44-9ab8-4641-9934-38d1cc67242c",
                            "url": "https://www.youtube.com/watch?v=cEItmb_a20D",
                            "embedUrl": "https://www.youtube.com/embed/cEItmb_a20D",
                            "language": "nl",
                            "copyrightHolder": "publiq"
                        },
                        {
                            "id": "b504cf44-9ab8-4641-9934-38d1cc67242c",
                            "url": "https://www.youtube.com/shorts/ViOS7SeT0HE",
                            "embedUrl": "https://www.youtube.com/shorts/ViOS7SeT0HE",
                            "language": "nl",
                            "copyrightHolder": "publiq"
                        },
                        {
                            "id": "46e9ea9f-fc42-4759-a81b-4308467b7c35",
                            "url": "https://www.vimeo.com/54fdrg",
                            "embedUrl": "https://player.vimeo.com/video/54fdrg",
                            "language": "nl"
                        }
                    ]
                ]
            },
            "Place-workflowStatus":
            {
                "title": "place.workflowStatus",
                "type": "string",
                "description": "The status in the moderation workflow.\n\nCan be one of four types:\n\n- `DRAFT`: Should not be visible on publication channels yet\n- `READY_FOR_VALIDATION`: Submitted for validation. Some publication channels may choose to show these.\n- `APPROVED`: Approved, will be visible on all publication channels (depending on the `availableFrom` and `availableTo`). Only possible if you have moderation permissions.\n- `REJECTED`: Rejected, will be hidden from all publication channels. Only possible if you have moderation permissions.\n- `DELETED`: Removed and should not be visible on any publication channels.",
                "enum":
                [
                    "DRAFT",
                    "READY_FOR_VALIDATION",
                    "APPROVED",
                    "REJECTED",
                    "DELETED"
                ],
                "examples":
                [
                    "DRAFT"
                ]
            },
            "Place":
            {
                "title": "place",
                "type": "object",
                "description": "A cultural, pastime, or sports-related location that can be visited or where an event can be located at.\n\nFor more information: <a href=\"https://docs.publiq.be/docs/uitdatabank/entry-api/places/what-are-places\">What are places?</a>",
                "allOf":
                [
                    {
                        "properties":
                        {
                            "@id":
                            {
                                "$ref": "#/components/schemas/Place-@id"
                            },
                            "mainLanguage":
                            {
                                "$ref": "#/components/schemas/Place-mainLanguage"
                            },
                            "name":
                            {
                                "$ref": "#/components/schemas/Place-name"
                            },
                            "terms":
                            {
                                "$ref": "#/components/schemas/Place-terms"
                            },
                            "calendarType":
                            {
                                "$ref": "#/components/schemas/Place-calendarType"
                            },
                            "address":
                            {
                                "$ref": "#/components/schemas/Place-address"
                            },
                            "geo":
                            {
                                "$ref": "#/components/schemas/Place-geo"
                            },
                            "organizer":
                            {
                                "$ref": "#/components/schemas/Place-organizer"
                            },
                            "startDate":
                            {
                                "$ref": "#/components/schemas/Place-startDate"
                            },
                            "endDate":
                            {
                                "$ref": "#/components/schemas/Place-endDate"
                            },
                            "status":
                            {
                                "$ref": "#/components/schemas/Place-status"
                            },
                            "openingHours":
                            {
                                "$ref": "#/components/schemas/Place-openingHours"
                            },
                            "availableFrom":
                            {
                                "$ref": "#/components/schemas/Place-availableFrom"
                            },
                            "availableTo":
                            {
                                "$ref": "#/components/schemas/Place-availableTo"
                            },
                            "workflowStatus":
                            {
                                "$ref": "#/components/schemas/Place-workflowStatus"
                            },
                            "languages":
                            {
                                "$ref": "#/components/schemas/Place-languages"
                            },
                            "completedLanguages":
                            {
                                "$ref": "#/components/schemas/Place-completedLanguages"
                            },
                            "typicalAgeRange":
                            {
                                "$ref": "#/components/schemas/Place-typicalAgeRange"
                            },
                            "description":
                            {
                                "$ref": "#/components/schemas/Place-description"
                            },
                            "priceInfo":
                            {
                                "$ref": "#/components/schemas/Place-priceInfo"
                            },
                            "contactPoint":
                            {
                                "$ref": "#/components/schemas/Place-contactPoint"
                            },
                            "bookingInfo":
                            {
                                "$ref": "#/components/schemas/Place-bookingInfo"
                            },
                            "mediaObject":
                            {
                                "$ref": "#/components/schemas/Place-mediaObject"
                            },
                            "image":
                            {
                                "$ref": "#/components/schemas/Place-image"
                            },
                            "videos":
                            {
                                "$ref": "#/components/schemas/Place-videos"
                            },
                            "labels":
                            {
                                "$ref": "#/components/schemas/Place-labels"
                            },
                            "hiddenLabels":
                            {
                                "$ref": "#/components/schemas/Place-hiddenLabels"
                            },
                            "bookingAvailability":
                            {
                                "$ref": "#/components/schemas/Place-bookingAvailability"
                            },
                            "creator":
                            {
                                "$ref": "#/components/schemas/Place-creator"
                            },
                            "created":
                            {
                                "$ref": "#/components/schemas/Place-created"
                            },
                            "modified":
                            {
                                "$ref": "#/components/schemas/Place-modified"
                            },
                            "sameAs":
                            {
                                "$ref": "#/components/schemas/Place-sameAs"
                            },
                            "contributors":
                            {
                                "$ref": "#/components/schemas/Place-contributors"
                            },
                            "completeness":
                            {
                                "$ref": "#/components/schemas/Common-completeness"
                            },
                            "calendarSummary":
                            {
                                "$ref": "#/components/schemas/Place-calendarSummary"
                            }
                        },
                        "required":
                        [
                            "mainLanguage",
                            "name",
                            "terms",
                            "calendarType",
                            "address"
                        ]
                    },
                    {
                        "if":
                        {
                            "required":
                            [
                                "calendarType"
                            ],
                            "properties":
                            {
                                "calendarType":
                                {
                                    "const": "periodic"
                                }
                            }
                        },
                        "then":
                        {
                            "required":
                            [
                                "startDate",
                                "endDate"
                            ]
                        }
                    }
                ]
            }
        },
        "securitySchemes":
        {
            "USER_ACCESS_TOKEN":
            {
                "type": "oauth2",
                "flows":
                {},
                "description": "A user access token, obtained by redirecting the end user to publiq's authorization server to login using the **Authorization Code OAuth Flow**. See the [authentication docs about user access tokens](https://docs.publiq.be/docs/authentication/methods/client-access-token) for more info."
            },
            "CLIENT_ACCESS_TOKEN":
            {
                "type": "oauth2",
                "flows":
                {},
                "description": "A client access token, obtained by exchanging your client id and client secret for a token via an HTTP request to publiq's authorization server using the **Client Credentials OAuth Flow**. See the [authentication docs about client access tokens](https://docs.publiq.be/docs/authentication/methods/user-access-token) for more info."
            },
            "CLIENT_IDENTIFICATION":
            {
                "name": "x-client-id",
                "type": "apiKey",
                "in": "header"
            }
        },
        "parameters":
        {
            "x-client-id":
            {
                "schema":
                {
                    "type": "string"
                },
                "in": "header",
                "name": "x-client-id",
                "description": "The client id of your project (if not using an API key). May also be replaced with a `clientId` query parameter."
            },
            "x-api-key":
            {
                "schema":
                {
                    "type": "string"
                },
                "in": "header",
                "name": "x-api-key",
                "description": "The API key of your project on https://projectaanvraag.uitdatabank.be (if not using a client id). May also be replaced with an `apiKey` query parameter. Will be deprecated in favour of `x-client-id` in the future, but will still be supported.",
                "deprecated": true
            },
            "text":
            {
                "schema":
                {
                    "type": "string",
                    "example": " dijle (wandelen OR fietsen)"
                },
                "in": "query",
                "name": "text",
                "description": "Free text search terms. Returns results that match all or some of the given terms. May contain `AND` and `OR` operators, and brackets for grouping. Can not filter on specific fields (contrary to the `q` parameter). Typically used to search on user-provided keywords."
            },
            "q":
            {
                "schema":
                {
                    "type": "string",
                    "example": "labels:\"ook voor kinderen\" OR labels:\"ook voor jongeren\""
                },
                "in": "query",
                "name": "q",
                "description": "An advanced query in Lucene syntax, allowing you to construct complex AND/OR filters on specific fields."
            },
            "contributors":
            {
                "schema":
                {
                    "format": "email",
                    "type": "string",
                    "example": "technical-support@publiq.be"
                },
                "in": "query",
                "name": "contributors",
                "description": "Returns results for which a particular user / email address is a contributor"
            },
            "name":
            {
                "schema":
                {
                    "type": "string",
                    "example": "publiq"
                },
                "in": "query",
                "name": "name",
                "description": "Returns only results whose name autocompletes on the given name. For example searching for `pub` will return matches with `publiq` in the name."
            },
            "website":
            {
                "schema":
                {
                    "type": "string",
                    "example": "https://www.publiq.be/example"
                },
                "in": "query",
                "name": "website",
                "description": "Returns only results that have the given URL as their website. URLs in the query parameter and on the search results are normalized to reduce false negatives."
            },
            "domain":
            {
                "schema":
                {
                    "type": "string",
                    "example": "www.publiq.be"
                },
                "in": "query",
                "name": "domain",
                "description": "Returns only results that have a website on the given domain. Domains in the query parameter and on the search results are normalized to reduce false negatives."
            },
            "postalCode":
            {
                "schema":
                {
                    "type": "string",
                    "example": "1000"
                },
                "in": "query",
                "name": "postalCode",
                "description": "Returns only results that have the exact same postal code in their address. Typically 4 digits for Belgian addresses but can also be a different format for international addresses."
            },
            "isDuplicate":
            {
                "schema":
                {
                    "type": "boolean"
                },
                "in": "query",
                "name": "isDuplicate",
                "description": "Returns only results that include or excludes duplicate places"
            },
            "embed":
            {
                "schema":
                {
                    "type": "boolean"
                },
                "in": "query",
                "name": "embed",
                "description": "Returns the results with the actual JSON bodies of the individual items"
            },
            "embedUitpasPrices":
            {
                "schema":
                {
                    "type": "boolean"
                },
                "in": "query",
                "name": "embedUitpasPrices",
                "description": "Returns the results with the UiTPAS prices included (if applicable)"
            },
            "addressCountry":
            {
                "schema":
                {
                    "type": "string",
                    "example": "BE",
                    "pattern": "^[A-Z][A-Z]$",
                    "default": "BE"
                },
                "in": "query",
                "name": "addressCountry",
                "description": "Returns only results that have the exact same country code in their address. Formatted as an [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code. The default value can be disabled by setting the value to `*` or by using the `disableDefaultFilters` query parameter."
            },
            "maxAge":
            {
                "schema":
                {
                    "type": "integer",
                    "example": 18
                },
                "in": "query",
                "name": "maxAge",
                "description": "Returns only results that are targeted to participants/visitors of at most the given age (in years). The given age will be included in results."
            },
            "minAge":
            {
                "schema":
                {
                    "type": "integer",
                    "example": 12
                },
                "in": "query",
                "name": "minAge",
                "description": "Returns only results that are targeted to participants/visitors of at least the given age (in years). The given age will be included in results."
            },
            "allAges":
            {
                "schema":
                {
                    "type": "boolean"
                },
                "in": "query",
                "name": "allAges",
                "description": "Returns only results that are suitable for participants/visitors of all ages if set to `true`, or only returns results that are suitable for a specific age group if set to `false`."
            },
            "audienceType":
            {
                "schema":
                {
                    "type": "string",
                    "enum":
                    [
                        "everyone",
                        "members",
                        "education",
                        "*"
                    ],
                    "default": "everyone"
                },
                "in": "query",
                "name": "audienceType",
                "description": "Returns only results with the given enum value as their targeted audience. Results with audienceType `everyone` are targeted to any participant/visitor. Results with audienceType `members` are only targeted towards members of the organizer of the event. Results with audienceType `education` are targeted towards [CultuurKuur](https://www.cultuurkuur.be/)."
            },
            "availableFrom":
            {
                "schema":
                {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-03-04T10:30:00+01:00"
                },
                "in": "query",
                "name": "availableFrom",
                "description": "Returns only results that should (still) be visible on online calendars after the given date-time. Defaults to the current date-time of the request. The default value can be disabled by setting the value to `*` or by using the `disableDefaultFilters` query parameter. See (the guide about default filters)[../docs/search-api/common-filters/default-filters.md] for more information."
            },
            "availableTo":
            {
                "schema":
                {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-03-05T10:30:00+01:00"
                },
                "in": "query",
                "name": "availableTo",
                "description": "Returns only results that should be visible on online calendars up until the given date-time. Defaults to the current date-time of the request. The default value can be disabled by setting the value to `*` or by using the `disableDefaultFilters` query parameter. See (the guide about default filters)[../docs/search-api/common-filters/default-filters.md] for more information."
            },
            "attendanceMode":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string",
                        "enum":
                        [
                            "online",
                            "offline",
                            "mixed"
                        ]
                    }
                },
                "in": "query",
                "name": "attendanceMode",
                "description": "Returns only results with the given enum value as their attendance mode. Results with attendanceMode `online` are only happening online (e.g. via a video stream). Results with attendanceMode `offline` are only happening on a physical location. Results with attendanceMode `mixed` can be attended both online or offline. Note that when filtering on `mixed`, _only_ results that are both happening online and offline will be included. Accepts multiple comma-separated values to return results that have one of the given attendance modes.",
                "style": "form",
                "explode": false
            },
            "bookingAvailability":
            {
                "schema":
                {
                    "type": "string",
                    "enum":
                    [
                        "Available",
                        "Unavailable"
                    ]
                },
                "in": "query",
                "name": "bookingAvailability",
                "description": "Returns only results with the given enum value as their bookingAvailability type. Results with bookingAvailability `Available` still have tickets/reservations available. Results with bookingAvailability `Unavailable` are sold out / fully booked."
            },
            "calendarType":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string",
                        "enum":
                        [
                            "single",
                            "multiple",
                            "periodic",
                            "permanent"
                        ]
                    }
                },
                "style": "form",
                "explode": false,
                "in": "query",
                "name": "calendarType",
                "description": "Returns only results with the given enum value as their calendarType. Accepts multiple comma-separated values to return results that have one of the given calendar types. [Here is a detailed guide](./entry-api/shared/calendar-info#calendartype) with more information."
            },
            "createdFrom":
            {
                "schema":
                {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-03-04T10:30:00+01:00"
                },
                "in": "query",
                "name": "createdFrom",
                "description": "Returns only results that were created at or after the given date-time."
            },
            "createdTo":
            {
                "schema":
                {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-03-05T10:30:00+01:00"
                },
                "in": "query",
                "name": "createdTo",
                "description": "Returns only results that were created at or before the given date-time."
            },
            "modifiedFrom":
            {
                "schema":
                {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-03-04T10:30:00+01:00"
                },
                "in": "query",
                "name": "modifiedFrom",
                "description": "Returns only results that were last modified at or after the given date-time. If the result has never been modified, the `created` date-time will be used as `modified` instead."
            },
            "modifiedTo":
            {
                "schema":
                {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-03-05T10:30:00+01:00"
                },
                "in": "query",
                "name": "modifiedTo",
                "description": "Returns only results that were last modified at or before the given date-time. If the result has never been modified, the `created` date-time will be used as `modified` instead."
            },
            "creator":
            {
                "schema":
                {
                    "type": "string",
                    "example": "lxBfdgJwUaJUgm7CBCeKF2eE2fnsyLCB@clients"
                },
                "in": "query",
                "name": "creator",
                "description": "Returns only results that have a creator with the given user identifier. Due to historic reasons and evolutions in the id management systems, a user identifier can be one of: a UUID (for creators that had an UiTiD v1), an Auth0 user id (for new UiTiD v2 creators), or in some very old cases even an email address or nickname. (No new events or places are created with an email address or nickname as creator.) Can also be a client id suffixed with `@clients` in the case of results created with a client access token instead of a user access token."
            },
            "dateFrom":
            {
                "schema":
                {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-03-04T10:30:00+01:00"
                },
                "in": "query",
                "name": "dateFrom",
                "description": "Returns only events that are happening at some point after the given date-time, and places that are open at some point after the given date-time. Permanent events or places are always returned by this parameter."
            },
            "dateTo":
            {
                "schema":
                {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-03-05T10:30:00+01:00"
                },
                "in": "query",
                "name": "dateTo",
                "description": "Returns only events that are happening at some point before the given date-time, and places that are open at some point before the given date-time. Permanent events or places are always returned by this parameter."
            },
            "localTimeFrom":
            {
                "schema":
                {
                    "type": "string",
                    "pattern": "^([01]\\d|2[0123]):([012345]\\d)$",
                    "example": "08:30"
                },
                "in": "query",
                "name": "localTimeFrom",
                "description": "Returns only events that are happening at some point after the given time, and places that are open at some point after the given time. Dates and timezones are not taken into account by this parameter. Permanent events or places are always returned by this parameter."
            },
            "localTimeTo":
            {
                "schema":
                {
                    "type": "string",
                    "pattern": "^([01]\\d|2[0123]):([012345]\\d)$",
                    "example": "23:59"
                },
                "in": "query",
                "name": "localTimeTo",
                "description": "Returns only events that are happening at some point before the given time, and places that are open at some point before the given time. Dates and timezones are not taken into account by this parameter. Permanent events or places are always returned by this parameter."
            },
            "embedCalendarSummaries":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string",
                        "enum":
                        [
                            "xs-text",
                            "sm-text",
                            "md-text",
                            "lg-text",
                            "xs-html",
                            "sm-html",
                            "md-html",
                            "lg-html"
                        ]
                    }
                },
                "in": "query",
                "name": "embedCalendarSummaries[]",
                "description": "Adds an extra `calendarSummary` property to the results that contains one or more formatted human-readable summaries of the date/time info of the result. May be repeated to include multiple summaries per result. See the operation's description above for more info on how to repeat parameters.",
                "style": "form",
                "explode": true
            },
            "facets":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string",
                        "enum":
                        [
                            "regions",
                            "types",
                            "themes",
                            "facilities",
                            "labels"
                        ]
                    }
                },
                "in": "query",
                "name": "facets[]",
                "description": "Adds an extra `facet` property in the response with possible values for a given filter, and a prediction of the total results if applied. May be repeated to include facet counts for multiple filters. See the operation's description above for more info on how to repeat parameters. See (the guide about facets)[../docs/search-api/advanced/facets.md] for more information.",
                "style": "form",
                "explode": true
            },
            "regions":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string"
                    }
                },
                "in": "query",
                "name": "regions[]",
                "description": "Returns only results that are geographically located in the given region. Regions may be fetched programmatically from [https://search.uitdatabank.be/autocomplete.json](https://search.uitdatabank.be/autocomplete.json).",
                "style": "form",
                "explode": true
            },
            "coordinates":
            {
                "schema":
                {
                    "type": "string",
                    "pattern": "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$",
                    "example": "50.8511740,4.338674"
                },
                "in": "query",
                "name": "coordinates",
                "description": "A pair of latitude and longitude coordinates to find results that are located within a distance of the given geographical point. Must be used in combination with the `distance` parameter."
            },
            "distance":
            {
                "schema":
                {
                    "type": "string",
                    "pattern": "^\\s*(\\d+\\.?\\d*)\\s*(mi|miles|yd|yards|ft|feet|in|inch|km|kilometers|m|meters|cm|centimeters|mm|millimeters|NM|nmi|nauticalmiles)\\s*$",
                    "example": "10km"
                },
                "in": "query",
                "name": "distance",
                "description": "Returns only results that are geographically located within the given distance from the `coordinates` parameter."
            },
            "bounds":
            {
                "schema":
                {
                    "type": "string",
                    "example": "34.172684,-118.604794|34.236144,-118.500938",
                    "pattern": "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)\\|[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$"
                },
                "in": "query",
                "name": "bounds",
                "description": "Returns only results that are located in a specific geographical area defined by a pair of south-west coordinates and north-east coordinates. The two pairs of coordinates are separated by a pipe character (`|`)."
            },
            "groupBy":
            {
                "schema":
                {
                    "type": "string",
                    "enum":
                    [
                        "productionId"
                    ]
                },
                "in": "query",
                "name": "groupBy",
                "description": "Groups the results by their production. Grouping by productions ensures that for every production, only 1 event is returned in the search results"
            },
            "id":
            {
                "schema":
                {
                    "type": "string",
                    "example": "f29d2182-2db0-4f99-831a-8e6a64c1c9c1"
                },
                "in": "query",
                "name": "id",
                "description": "Returns only results that have the exact same id. An id can be extracted from an event, place, or organizer URI by taking all the characters after the last `/`. For example for the URI `https://io.uitdatabank.be/event/75573a64-ddc8-4fd0-8b07-d258939dd74f` the id is `75573a64-ddc8-4fd0-8b07-d258939dd74f`. Note that while it will be a UUID in most cases, it is not guaranteed to always be one!"
            },
            "locationId":
            {
                "schema":
                {
                    "type": "string",
                    "example": "a0368d10-ded0-4925-b94a-2835f73e255e"
                },
                "in": "query",
                "name": "locationId",
                "description": "Returns only results that are related to the given location id (= place id). A place's id can be extracted from its URI by taking all the characters after the last `/`. For example for the URI `https://io.uitdatabank.be/place/75573a64-ddc8-4fd0-8b07-d258939dd74f` the id is `75573a64-ddc8-4fd0-8b07-d258939dd74f`. Note that while it will be a UUID in most cases, it is not guaranteed to always be one!"
            },
            "organizerId":
            {
                "schema":
                {
                    "type": "string",
                    "example": "4fa5dddf-73d5-47f8-b54f-45d88cc1661a"
                },
                "in": "query",
                "name": "organizerId",
                "description": "Returns only results that are related to the given organizer id. An organizer's id can be extracted from its URI by taking all the characters after the last `/`. For example for the URI `https://io.uitdatabank.be/organizer/75573a64-ddc8-4fd0-8b07-d258939dd74f` the id is `75573a64-ddc8-4fd0-8b07-d258939dd74f`. Note that while it will be a UUID in most cases, it is not guaranteed to always be one!"
            },
            "labels":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string"
                    }
                },
                "in": "query",
                "name": "labels[]",
                "style": "form",
                "description": "Returns only results that have the given label(s) in either their `labels` or `hiddenLabels` properties. May be repeated to only return results that have all the given labels. See the operation's description above for more info on how to repeat parameters.",
                "explode": true
            },
            "locationLabels":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string"
                    }
                },
                "in": "query",
                "name": "locationLabels[]",
                "style": "form",
                "description": "Returns only results that have the given label(s) in their location's `labels` or `hiddenLabels` properties. May be repeated to only return results with a location that has all the given labels. See the operation's description above for more info on how to repeat parameters.",
                "explode": true
            },
            "organizerLabels":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string"
                    }
                },
                "in": "query",
                "name": "organizerLabels[]",
                "style": "form",
                "description": "Returns only results that have the given label(s) in their organizer's `labels` or `hiddenLabels` properties. May be repeated to only return results with an organizer that has all the given labels. See the operation's description above for more info on how to repeat parameters.",
                "explode": true
            },
            "mainLanguage":
            {
                "schema":
                {
                    "type": "string",
                    "pattern": "^[a-z][a-z]$",
                    "enum":
                    [
                        "nl",
                        "fr",
                        "de",
                        "en"
                    ]
                },
                "in": "query",
                "name": "mainLanguage",
                "description": "Returns only results that have the given language code as their main (= original) language."
            },
            "languages":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string",
                        "pattern": "^[a-z][a-z]$",
                        "enum":
                        [
                            "nl",
                            "fr",
                            "de",
                            "en"
                        ]
                    }
                },
                "in": "query",
                "name": "languages[]",
                "style": "form",
                "description": "Returns only results that have a localised value in the given language for one or more translatable fields like `name`. May be repeated to only return results that have localised values for all the given languages. See the operation's description above for more info on how to repeat parameters.",
                "explode": true
            },
            "completedLanguages":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string",
                        "pattern": "^[a-z][a-z]$",
                        "enum":
                        [
                            "nl",
                            "fr",
                            "de",
                            "en"
                        ]
                    }
                },
                "in": "query",
                "name": "completedLanguages[]",
                "style": "form",
                "description": "Returns only results that have a localised value in the given language for every translatable field. May be repeated to only return results that have localised values for all the given languages. See the operation's description above for more info on how to repeat parameters.",
                "explode": true
            },
            "hasMediaObjects":
            {
                "schema":
                {
                    "type": "boolean"
                },
                "in": "query",
                "name": "hasMediaObjects",
                "description": "Returns only results that have one or more items inside their `mediaObject` property if set to `true`. Returns only results without `mediaObject` property if set to `false`."
            },
            "hasImages":
            {
                "schema":
                {
                    "type": "boolean"
                },
                "in": "query",
                "name": "hasImages",
                "description": "Returns only results that have one or more items inside their `images` property if set to `true`. Returns only results without `images` property if set to `false`."
            },
            "price":
            {
                "schema":
                {
                    "type": "number",
                    "example": 5.75
                },
                "in": "query",
                "name": "price",
                "description": "Returns only results with exactly the same price for the base tariff (in EUR)."
            },
            "minPrice":
            {
                "schema":
                {
                    "type": "number",
                    "example": 5.75
                },
                "in": "query",
                "name": "minPrice",
                "description": "Returns only results with a price for the base tariff that is equal to or higher than the given price (in EUR)."
            },
            "maxPrice":
            {
                "schema":
                {
                    "type": "number"
                },
                "in": "query",
                "name": "maxPrice",
                "description": "Returns only results with a price for the base tariff that is equal to or lower than the given price (in EUR)."
            },
            "sortScore":
            {
                "schema":
                {
                    "type": "string",
                    "enum":
                    [
                        "asc",
                        "desc"
                    ]
                },
                "in": "query",
                "name": "sort[score]",
                "description": "Sorts the results by their score (relevance), either with the lowest score first (`asc`) or the highest score first (`desc`). See (the guide about sorting)[../docs/search-api/sorting.md] for more information."
            },
            "sortAvailableTo":
            {
                "schema":
                {
                    "type": "string",
                    "enum":
                    [
                        "asc",
                        "desc"
                    ]
                },
                "in": "query",
                "name": "sort[availableTo]",
                "description": "Sorts the results by their `availableTo` date-time, either with the oldest date-time first (`asc`) or the highest date-time first (`desc`). Most commonly used to show events and/or places that will end or become unavailable soon. See (the guide about sorting)[../docs/search-api/sorting.md] for more information."
            },
            "sortCreated":
            {
                "schema":
                {
                    "type": "string",
                    "enum":
                    [
                        "asc",
                        "desc"
                    ]
                },
                "in": "query",
                "name": "sort[created]",
                "description": "Sorts the results by their `created` date-time, either with the oldest results first (`asc`) or the newest results first (`desc`). See (the guide about sorting)[../docs/search-api/sorting.md] for more information."
            },
            "sortModified":
            {
                "schema":
                {
                    "type": "string",
                    "enum":
                    [
                        "asc",
                        "desc"
                    ]
                },
                "in": "query",
                "name": "sort[modified]",
                "description": "Sorts the results by their `modified` date-time, either with the least recently modified results first (`asc`) or the most recently modified results first (`desc`). See (the guide about sorting)[../docs/search-api/sorting.md] for more information."
            },
            "sortDistance":
            {
                "schema":
                {
                    "type": "string",
                    "enum":
                    [
                        "asc",
                        "desc"
                    ]
                },
                "in": "query",
                "name": "sort[distance]",
                "description": "Sorts the results by their distance from the `coordinates` parameter. Can only be used if `coordinates` and `distance` are also set. You may use multiple sort parameters. See (the guide about sorting)[../docs/search-api/sorting.md] for more information."
            },
            "status":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string",
                        "enum":
                        [
                            "Available",
                            "TemporarilyUnavailable",
                            "Unavailable"
                        ]
                    }
                },
                "in": "query",
                "style": "form",
                "explode": false,
                "name": "status",
                "description": "Returns only results with exactly the same status type as the given enum value. `Available` means an event is happening as planned, and a place can be visited during its normal opening hours. `TemporarilyUnavailable` means an event has been postponed to a later date (yet to be determined), and a place is temporarily closed (for example due to renovations). `Unavailable` means an event is cancelled, or a place is permanently closed. If combined with `dateFrom` and/or `dateTo`, only results that have the given status in that time period will be returned. Accepts multiple comma-separated values to return results that have one of the given status types."
            },
            "termIds":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string"
                    }
                },
                "in": "query",
                "name": "termIds[]",
                "style": "form",
                "description": "Returns only results that have the given term id(s) in either their `terms` property items. May be repeated to only return results that have all the given term ids. See the operation's description above for more info on how to repeat parameters.",
                "explode": true
            },
            "uitpas":
            {
                "schema":
                {
                    "type": "boolean"
                },
                "in": "query",
                "name": "uitpas",
                "description": "Returns only results that are related to UiTPAS if set to `true`. Returns only results that are not related to UiTPAS if set to `false`."
            },
            "hasVideos":
            {
                "schema":
                {
                    "type": "boolean"
                },
                "in": "query",
                "name": "hasVideos",
                "description": "Returns only results that have one or more items in their `videos` property if set to `true`. Returns only results that have no `videos` property if set to `false`."
            },
            "workflowStatusOffer":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string",
                        "enum":
                        [
                            "DRAFT",
                            "READY_FOR_VALIDATION",
                            "APPROVED",
                            "REJECTED",
                            "DELETED",
                            "*"
                        ],
                        "example": "DRAFT"
                    }
                },
                "style": "form",
                "explode": false,
                "in": "query",
                "name": "workflowStatus",
                "description": "Returns only results with exactly the same workflow status as the given enum value. Accepts multiple comma-separated values to return results that have one of the given workflow statuses. Defaults to only return results that either have the workflow status `READY_FOR_VALIDATION` or `APPROVED`. The default value can be reset by setting the parameter to `*`. See (the guide about default filters)[../docs/search-api/common-filters/default-filters.md] for more information."
            },
            "workflowStatusOrganizer":
            {
                "schema":
                {
                    "type": "array",
                    "items":
                    {
                        "type": "string",
                        "enum":
                        [
                            "ACTIVE",
                            "DELETED",
                            "*"
                        ],
                        "example": "ACTIVE"
                    }
                },
                "style": "form",
                "explode": false,
                "in": "query",
                "name": "workflowStatus",
                "description": "Returns only results with exactly the same workflow status as the given enum value. Accepts multiple comma-separated values to return results that have one of the given workflow statuses. Defaults to only return results that have the workflow status `ACTIVE`. The default value can be reset by setting the parameter to `*`. See (the guide about default filters)[../docs/search-api/common-filters/default-filters.md] for more information."
            }
        },
        "responses":
        {
            "Unauthorized":
            {
                "description": "Unauthorized. Your request is missing the required credentials to authenticate. See the Authentication documentation for more info.\n\n* type: https://api.publiq.be/probs/auth/unauthorized\n* detail: might contain a developer-readable explanation of the reason",
                "content":
                {
                    "application/problem+json":
                    {
                        "schema":
                        {
                            "type": "object",
                            "x-sl-internally-excluded": true,
                            "x-sl-error-message": "You do not have permission to view this reference"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "value":
                                {
                                    "type": "https://api.publiq.be/probs/auth/unauthorized",
                                    "title": "Unauthorized",
                                    "status": 401
                                }
                            }
                        }
                    }
                }
            },
            "Forbidden":
            {
                "description": "Forbidden. Your request was successfully authenticated but you do not have permission to perform this particular request.\n\n* type: https://api.publiq.be/probs/auth/forbidden\n* detail: might contain a developer-readable explanation of the reason",
                "content":
                {
                    "application/problem+json":
                    {
                        "schema":
                        {
                            "type": "object",
                            "x-sl-internally-excluded": true,
                            "x-sl-error-message": "You do not have permission to view this reference"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "value":
                                {
                                    "type": "https://api.publiq.be/probs/auth/forbidden",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "user must be admin of organizer abcd1234"
                                }
                            }
                        }
                    }
                }
            },
            "NotFound":
            {
                "description": "The requested resource (URL) could not be found.\nThis can be due to one of multiple reasons:\n\n* The endpoint has a typo and/or does not exist on the API\n* One of the path parameters contains a value that is invalid or does not exist\n* One of the required query parameters is missing\n* One of the query parameters has an invalid value\n\nThe `detail` property of the response should contain more specific information.\n\nThe `type` will always be `https://api.publiq.be/probs/url/not-found`.",
                "content":
                {
                    "application/problem+json":
                    {
                        "schema":
                        {
                            "type": "object",
                            "x-sl-internally-excluded": true,
                            "x-sl-error-message": "You do not have permission to view this reference"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "value":
                                {
                                    "type": "https://api.publiq.be/probs/url/not-found",
                                    "title": "URL not found",
                                    "status": 404,
                                    "detail": "The resource with id \"76C6AC08-763C-492E-A68C-CBC43A857229\" was not found."
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}